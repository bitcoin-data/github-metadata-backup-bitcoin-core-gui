{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692",
    "id": 1179575397,
    "node_id": "PR_kwDOEEET9c5GTuRl",
    "html_url": "https://github.com/bitcoin-core/gui/pull/692",
    "diff_url": "https://github.com/bitcoin-core/gui/pull/692.diff",
    "patch_url": "https://github.com/bitcoin-core/gui/pull/692.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692",
    "commits_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/gui/statuses/2c9974742d204fc1455688b981b31d06983cb8c7",
    "number": 692,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Debug Console implementation of generate method",
    "user": {
      "login": "hernanmarino",
      "id": 87907936,
      "node_id": "MDQ6VXNlcjg3OTA3OTM2",
      "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hernanmarino",
      "html_url": "https://github.com/hernanmarino",
      "followers_url": "https://api.github.com/users/hernanmarino/followers",
      "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
      "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
      "repos_url": "https://api.github.com/users/hernanmarino/repos",
      "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is an implementation of a (gui console only) generate method, and fixes https://github.com/bitcoin-core/gui/issues/55 , as described in that issue.\r\nThis changes the behaviour of `bitcoin-qt`  while  imitating the behaviour and return data from `bitcoin-cli`'s  `-generate` argument as implemented in https://github.com/bitcoin/bitcoin/pull/19133.\r\n\r\nThe `generate` comand takes two optional parameters:\r\n\r\n```\r\ngenerate ( nblocks   ( maxtries) )\r\nMine a specified amount of blocks to own ( on the fly generated ) address.\r\n\r\nArguments:\r\n1. nblocks    (numeric, optional, , default=1) How many blocks are generated.\r\n2. maxtries   (numeric, optional, default=1000000) How many iterations to try.\r\n\r\nResult:\r\n{\r\n  \"address\":          (address generated by this command)\r\n  \"blocks\": [           (json array of block hashes)\r\n     ....\r\n]\r\n}\r\n```\r\nThe output looks similar to the following : \r\n\r\n![image](https://user-images.githubusercontent.com/87907936/210101785-19273943-03cc-4b77-957b-b8866c46f6b6.png)\r\n\r\nNote to reviewers / testers:\r\n\r\n- Consider that this is a `bitcoin-qt` only implementation . `bitcoin-cli` already had this functionality implemented in the referenced PR.\r\n- It is advised to run `bitcoin-qt` in regtest, to be able to actually generate some blocks and test the output properly \r\n",
    "labels": [
      {
        "id": 2147693884,
        "node_id": "MDU6TGFiZWwyMTQ3NjkzODg0",
        "url": "https://api.github.com/repos/bitcoin-core/gui/labels/Feature",
        "name": "Feature",
        "description": "",
        "color": "8fe567",
        "default": false
      },
      {
        "id": 2964264316,
        "node_id": "MDU6TGFiZWwyOTY0MjY0MzE2",
        "url": "https://api.github.com/repos/bitcoin-core/gui/labels/UX",
        "name": "UX",
        "description": "All about \"how to get things done\"",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 5353934559,
        "node_id": "LA_kwDOEEET9c8AAAABPx6O3w",
        "url": "https://api.github.com/repos/bitcoin-core/gui/labels/CI%20failed",
        "name": "CI failed",
        "color": "ededed",
        "default": false
      }
    ],
    "created_at": "2022-12-28T16:47:21Z",
    "updated_at": "2024-10-04T22:15:43Z",
    "mergeable": true,
    "mergeable_state": "unstable",
    "merge_commit_sha": "5ce6be45c18ea6eb7b56581a2ff86872dc114dad",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "hernanmarino:generate-gui-console",
      "ref": "generate-gui-console",
      "sha": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 482660958,
        "node_id": "R_kgDOHMTSXg",
        "name": "gui",
        "full_name": "hernanmarino/gui",
        "owner": {
          "login": "hernanmarino",
          "id": 87907936,
          "node_id": "MDQ6VXNlcjg3OTA3OTM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hernanmarino",
          "html_url": "https://github.com/hernanmarino",
          "followers_url": "https://api.github.com/users/hernanmarino/followers",
          "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
          "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
          "repos_url": "https://api.github.com/users/hernanmarino/repos",
          "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hernanmarino/gui",
        "description": "Bitcoin Core GUI staging repository",
        "fork": true,
        "url": "https://api.github.com/repos/hernanmarino/gui",
        "archive_url": "https://api.github.com/repos/hernanmarino/gui/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hernanmarino/gui/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hernanmarino/gui/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hernanmarino/gui/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hernanmarino/gui/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hernanmarino/gui/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hernanmarino/gui/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hernanmarino/gui/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hernanmarino/gui/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hernanmarino/gui/contributors",
        "deployments_url": "https://api.github.com/repos/hernanmarino/gui/deployments",
        "downloads_url": "https://api.github.com/repos/hernanmarino/gui/downloads",
        "events_url": "https://api.github.com/repos/hernanmarino/gui/events",
        "forks_url": "https://api.github.com/repos/hernanmarino/gui/forks",
        "git_commits_url": "https://api.github.com/repos/hernanmarino/gui/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hernanmarino/gui/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hernanmarino/gui/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hernanmarino/gui.git",
        "issue_comment_url": "https://api.github.com/repos/hernanmarino/gui/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hernanmarino/gui/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hernanmarino/gui/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hernanmarino/gui/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hernanmarino/gui/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hernanmarino/gui/languages",
        "merges_url": "https://api.github.com/repos/hernanmarino/gui/merges",
        "milestones_url": "https://api.github.com/repos/hernanmarino/gui/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hernanmarino/gui/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hernanmarino/gui/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hernanmarino/gui/releases%7B/id%7D",
        "ssh_url": "git@github.com:hernanmarino/gui.git",
        "stargazers_url": "https://api.github.com/repos/hernanmarino/gui/stargazers",
        "statuses_url": "https://api.github.com/repos/hernanmarino/gui/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hernanmarino/gui/subscribers",
        "subscription_url": "https://api.github.com/repos/hernanmarino/gui/subscription",
        "tags_url": "https://api.github.com/repos/hernanmarino/gui/tags",
        "teams_url": "https://api.github.com/repos/hernanmarino/gui/teams",
        "trees_url": "https://api.github.com/repos/hernanmarino/gui/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hernanmarino/gui.git",
        "hooks_url": "https://api.github.com/repos/hernanmarino/gui/hooks",
        "svn_url": "https://github.com/hernanmarino/gui",
        "homepage": "https://github.com/bitcoin/bitcoin",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 155983,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-15T18:50:12Z",
        "created_at": "2022-04-17T23:57:05Z",
        "updated_at": "2022-06-16T04:04:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "cad2df24b396be403f13f372ec48ea14a90d7f06",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 272700405,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNzI3MDA0MDU=",
        "name": "gui",
        "full_name": "bitcoin-core/gui",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/gui",
        "description": "Bitcoin Core GUI staging repository",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/gui",
        "archive_url": "https://api.github.com/repos/bitcoin-core/gui/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/gui/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/gui/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/gui/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/gui/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/gui/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/gui/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/gui/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/gui/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/gui/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/gui/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/gui/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/gui/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/gui/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/gui/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/gui/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/gui/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/gui.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/gui/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/gui/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/gui/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/gui/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/gui/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/gui/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/gui/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/gui/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/gui/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/gui.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/gui/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/gui/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/gui/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/gui/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/gui/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/gui/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/gui/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/gui.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/gui/hooks",
        "svn_url": "https://github.com/bitcoin-core/gui",
        "homepage": "https://github.com/bitcoin/bitcoin",
        "language": "C++",
        "forks_count": 261,
        "stargazers_count": 594,
        "watchers_count": 594,
        "size": 163526,
        "default_branch": "master",
        "open_issues_count": 154,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-04T10:22:14Z",
        "created_at": "2020-06-16T12:20:07Z",
        "updated_at": "2024-10-04T10:22:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 157,
    "deletions": 29,
    "changed_files": 1,
    "commits": 2,
    "review_comments": 63,
    "comments": 32
  },
  "events": [
    {
      "event": "commented",
      "id": 1366785571,
      "node_id": "IC_kwDOEEET9c5Rd34j",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1366785571",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-28T16:47:23Z",
      "updated_at": "2024-10-04T22:15:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jarolrod](https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1246832169), [hebasto](https://github.com/bitcoin-core/gui/pull/692#issuecomment-1383226374), [rserranon](https://github.com/bitcoin-core/gui/pull/692#issuecomment-1428851086), [LarryRuane](https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1301800961), [furszy](https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1491894680) |\n| Approach NACK | [luke-jr](https://github.com/bitcoin-core/gui/pull/692#issuecomment-1654620797) |\n| Stale ACK | [RandyMcMillan](https://github.com/bitcoin-core/gui/pull/692#issuecomment-1402880378), [pablomartin4btc](https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1630145500) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#841](https://github.com/bitcoin-core/gui/pull/841) (Decouple WalletModel from RPCExecutor by furszy)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1366785571",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8122660591,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAHkJfbv",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8122660591",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-28T18:46:59Z"
    },
    {
      "event": "ready_for_review",
      "id": 8122912106,
      "node_id": "RFRE_lADOEEET9c5aLhyozwAAAAHkKc1q",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8122912106",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-28T19:53:24Z"
    },
    {
      "event": "reviewed",
      "id": 1231906720,
      "node_id": "PRR_kwDOEEET9c5JbWeg",
      "url": null,
      "actor": null,
      "commit_id": "454fc48df2c1ec2255eebde04e142af528ba8d54",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK. It's good to make the `-generate` command available at the rpc console level in `bitcoin-qt` as it's already in `bitcoin-cli`.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1231906720",
      "submitted_at": "2022-12-28T21:09:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8126874810,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAHkZkS6",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8126874810",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-29T15:43:35Z"
    },
    {
      "event": "reviewed",
      "id": 1232619132,
      "node_id": "PRR_kwDOEEET9c5JeEZ8",
      "url": null,
      "actor": null,
      "commit_id": "b7782a4177977d62a2e2860c3a99b919b8e5b0a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "b7782a4177977d62a2e2860c3a99b919b8e5b0a2 ACK.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1232619132",
      "submitted_at": "2022-12-29T16:21:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1367470026,
      "node_id": "IC_kwDOEEET9c5Rge_K",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1367470026",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-29T17:09:37Z",
      "updated_at": "2023-01-25T00:25:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "ConceptACK\r\n\r\n\r\n<details>\r\n<summary>:)</summary>\r\n<p>\r\n\r\n```\r\n\r\nAdditional logic to detect whether `-generate` is or is not followed by an integer would be great.\r\n\r\n![generate-gui-console](https://user-images.githubusercontent.com/152159/209985593-0fe468fc-038b-44d2-90fc-303ecc3944d4.png)\r\n\r\nSlightly better syntax suggestion in the error message would be excellent. \r\n\r\n```\r\n\r\n</p>\r\n</details>  \r\n\r\n",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1367470026",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1368053482,
      "node_id": "IC_kwDOEEET9c5Ritbq",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1368053482",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-30T19:01:38Z",
      "updated_at": "2022-12-30T19:04:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @RandyMcMillan . Thank you for taking the time to look at my PR. The changes I implemented are actually on `bitcoin-qt` and not on `bitcoin-cli` . I updated the PR description to make it clearer. I believe the issues you describe are not present here, but you are welcome to test them, please let me know if you find anything. ",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1368053482",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8131429532,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHkq8Sc",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8131429532",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-30T19:01:38Z"
    },
    {
      "event": "subscribed",
      "id": 8131429537,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHkq8Sh",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8131429537",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-30T19:01:38Z"
    },
    {
      "event": "reviewed",
      "id": 1233972927,
      "node_id": "PRR_kwDOEEET9c5JjO6_",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1233972927",
      "submitted_at": "2023-01-02T20:25:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1233973285,
      "node_id": "PRR_kwDOEEET9c5JjPAl",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1233973285",
      "submitted_at": "2023-01-02T20:26:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1233973690,
      "node_id": "PRR_kwDOEEET9c5JjPG6",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1233973690",
      "submitted_at": "2023-01-02T20:28:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1233976159,
      "node_id": "PRR_kwDOEEET9c5JjPtf",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1233976159",
      "submitted_at": "2023-01-02T20:39:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "labeled",
      "id": 8143413691,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAAHlYqG7",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8143413691",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-03T14:38:21Z",
      "label": {
        "name": "Feature",
        "color": "8fe567"
      }
    },
    {
      "event": "labeled",
      "id": 8143413699,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAAHlYqHD",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8143413699",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-03T14:38:21Z",
      "label": {
        "name": "UX",
        "color": "0052cc"
      }
    },
    {
      "event": "reviewed",
      "id": 1237900031,
      "node_id": "PRR_kwDOEEET9c5JyNr_",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK 9b0b762fd774207d127213c1c9da354aef38e739.\r\nChecked output with different params (amount of blocks, tries), compared with outputs from `bitcoin-cli` as well, all good!",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1237900031",
      "submitted_at": "2023-01-05T19:02:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1237905380,
      "node_id": "PRR_kwDOEEET9c5JyO_k",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Is it possible for someone to link this PR to the issue [#55](https://github.com/bitcoin-core/gui/issues/55) if appropriate please?",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1237905380",
      "submitted_at": "2023-01-05T19:07:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1246832169,
      "node_id": "PRR_kwDOEEET9c5KUSYp",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nDid some light testing, seems to work as intended.\r\n\r\nSome window dressing, will review more deeply soon. First, please squash the commits so that you have a clean commit history; and give the commit a nice descriptive name like: `qt: add generate command to gui console`\r\n\r\nAfter you've squashed the commits, run the clang-format-diff script to clean up some of the code formatting issues here, for convenience you could just run the following: \r\n```\r\ngit diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\r\n``` \r\n\r\nAdditionally, the command could use a `help generate`, currently this results in a parse error as there is no help for it.",
      "user": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1246832169",
      "submitted_at": "2023-01-13T02:44:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1248665543,
      "node_id": "PRR_kwDOEEET9c5KbR_H",
      "url": null,
      "actor": null,
      "commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nCould re-write it, without the regex stuff, a bit simpler:\r\n\r\n```c++\r\nstd::vector<std::string> split_command = SplitString(executableCommand, \" \");\r\nif (!split_command.empty() && split_command[0] == \"generate\") {\r\n    // Remove last \"\\n\"\r\n    std::string last_param = split_command[split_command.size()-1];\r\n    split_command[split_command.size()-1] = last_param.substr(0, last_param.size() - 1);\r\n\r\n    // Generate address\r\n    std::string address_result;\r\n    if (!RPCConsole::RPCExecuteCommandLine(m_node, address_result, \"getnewaddress\\n\", nullptr, wallet_model)) {\r\n        Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: cannot get new address\"));\r\n         return;\r\n    }\r\n\r\n    // Craft command\r\n    const std::string blocks_num = split_command.size() > 1 ? split_command[1] : \"1\";\r\n    const std::string max_tries = split_command.size() > 2 ? split_command[2] : \"\";\r\n    executableCommand = \"generatetoaddress \" + blocks_num + \" \\\"\" + address_result + \"\\\" \" + max_tries;\r\n}\r\n```\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1248665543",
      "submitted_at": "2023-01-14T00:09:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1382616501,
      "node_id": "IC_kwDOEEET9c5SaQ21",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1382616501",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-14T01:00:44Z",
      "updated_at": "2023-01-14T01:00:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for all the insights. In the first days of the next week I'll try to incorporate the feedback and squash the commits.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1382616501",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "renamed",
      "id": 8229826630,
      "node_id": "RTE_lADOEEET9c5aLhyozwAAAAHqiTBG",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8229826630",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-15T15:50:30Z",
      "rename": {
        "from": "GUI: Debug Console implementation of generate method",
        "to": "Debug Console implementation of generate method"
      }
    },
    {
      "event": "commented",
      "id": 1383226374,
      "node_id": "IC_kwDOEEET9c5SclwG",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1383226374",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-15T19:03:23Z",
      "updated_at": "2023-01-15T19:03:23Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\n@hernanmarino You could also [link](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword) the initial issue in the PR description.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1383226374",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8230210710,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHqjwyW",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8230210710",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-15T19:03:23Z"
    },
    {
      "event": "subscribed",
      "id": 8230210712,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHqjwyY",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8230210712",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-15T19:03:23Z"
    },
    {
      "event": "commented",
      "id": 1384655685,
      "node_id": "IC_kwDOEEET9c5SiCtF",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1384655685",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-16T23:08:41Z",
      "updated_at": "2023-01-16T23:08:41Z",
      "author_association": "NONE",
      "body": "> Concept ACK\r\n> \r\n> Could re-write it, without the regex stuff, a bit simpler:\r\n> \r\n> ```c++\r\n> std::vector<std::string> split_command = SplitString(executableCommand, \" \");\r\n> if (!split_command.empty() && split_command[0] == \"generate\") {\r\n>     // Remove last \"\\n\"\r\n>     std::string last_param = split_command[split_command.size()-1];\r\n>     split_command[split_command.size()-1] = last_param.substr(0, last_param.size() - 1);\r\n> \r\n>     // Generate address\r\n>     std::string address_result;\r\n>     if (!RPCConsole::RPCExecuteCommandLine(m_node, address_result, \"getnewaddress\\n\", nullptr, wallet_model)) {\r\n>         Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: cannot get new address\"));\r\n>          return;\r\n>     }\r\n> \r\n>     // Craft command\r\n>     const std::string blocks_num = split_command.size() > 1 ? split_command[1] : \"1\";\r\n>     const std::string max_tries = split_command.size() > 2 ? split_command[2] : \"\";\r\n>     executableCommand = \"generatetoaddress \" + blocks_num + \" \\\"\" + address_result + \"\\\" \" + max_tries;\r\n> }\r\n> ```\r\n\r\nDoes it make sense to include parsing logic, generate a new address, and then craft the command to call the `generatetoaddress`, inside the `RPCExecutor::request` function, or it should be done on a separate function?  ",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1384655685",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1384675838,
      "node_id": "IC_kwDOEEET9c5SiHn-",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1384675838",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-16T23:44:24Z",
      "updated_at": "2023-01-16T23:44:24Z",
      "author_association": "MEMBER",
      "body": "> Does it make sense to include parsing logic, generate a new address, and then craft the command to call the generatetoaddress, inside the RPCExecutor::request function, or it should be done on a separate function?\r\n\r\nA separate function returning the command string would be better.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1384675838",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1402865686,
      "node_id": "IC_kwDOEEET9c5TnggW",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1402865686",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T00:16:45Z",
      "updated_at": "2023-01-25T01:13:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "tested on top of a62231bca629e945349255a1d331dd5c7a86ddd1\r\n\r\nTested ConceptACK 9b0b762fd774207d127213c1c9da354aef38e739\r\n\r\nmacOS: Arm64\r\n\r\n![Screen Shot 2023-01-24 at 7 12 54 PM](https://user-images.githubusercontent.com/152159/214450851-152826e4-a588-41d3-8b1a-ea3554c3039e.png)\r\n",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1402865686",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1402880378,
      "node_id": "IC_kwDOEEET9c5TnkF6",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1402880378",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T00:33:10Z",
      "updated_at": "2023-01-25T01:14:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "tested on top of https://github.com/bitcoin-core/gui/commit/a62231bca629e945349255a1d331dd5c7a86ddd1\r\n\r\nTested ConceptACK 9b0b762fd774207d127213c1c9da354aef38e739\r\n\r\nmacOS: x86_64\r\n\r\n![Screen Shot 2023-01-24 at 7 31 04 PM](https://user-images.githubusercontent.com/152159/214453050-2d07bb61-0ab4-4081-81ac-73083f614b82.png)\r\n",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1402880378",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1402906676,
      "node_id": "IC_kwDOEEET9c5Tnqg0",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1402906676",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:07:15Z",
      "updated_at": "2023-01-25T01:16:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "@hernanmarino - @rserranon 's suggestion is compelling... \r\n\r\n[https://github.com/RandyMcMillan/gui/tree/612a0c14173d681a04021581851422ba832236ee](https://github.com/RandyMcMillan/gui/tree/612a0c14173d681a04021581851422ba832236ee)\r\n\r\nApplied as a patch on top of this PR:\r\nhttps://github.com/RandyMcMillan/gui/blob/612a0c14173d681a04021581851422ba832236ee/rserranon.patch\r\n\r\nI haven't fully tested the patch but works on MacOS x86_64\r\n",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1402906676",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8350313211,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHxt6r7",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350313211",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:07:15Z"
    },
    {
      "event": "subscribed",
      "id": 8350313221,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHxt6sF",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350313221",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:07:15Z"
    },
    {
      "event": "mentioned",
      "id": 8350313234,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHxt6sS",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350313234",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:07:15Z"
    },
    {
      "event": "subscribed",
      "id": 8350313241,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHxt6sZ",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350313241",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:07:15Z"
    },
    {
      "event": "commented",
      "id": 1402920699,
      "node_id": "IC_kwDOEEET9c5Tnt77",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1402920699",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:27:54Z",
      "updated_at": "2023-01-25T01:27:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "\r\nThanks for the feedback and testing. I ' m already working on an update consider this and all feedback received, will update soon.\r\n\r\n> @hernanmarino - @rserranon 's suggestion is compelling...\r\n> \r\n> [RandyMcMillan/gui@`612a0c1`](https://github.com/RandyMcMillan/gui/tree/612a0c14173d681a04021581851422ba832236ee)\r\n> \r\n> Applied as a patch on top of this PR: [RandyMcMillan/gui@`612a0c1`/rserranon.patch](https://github.com/RandyMcMillan/gui/blob/612a0c14173d681a04021581851422ba832236ee/rserranon.patch)\r\n> \r\n> I haven't fully tested the patch but works on MacOS x86_64\r\n\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1402920699",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8350402284,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHxuQbs",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350402284",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:27:54Z"
    },
    {
      "event": "subscribed",
      "id": 8350402286,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHxuQbu",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350402286",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:27:54Z"
    },
    {
      "event": "mentioned",
      "id": 8350402290,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHxuQby",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350402290",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:27:54Z"
    },
    {
      "event": "subscribed",
      "id": 8350402297,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHxuQb5",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8350402297",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T01:27:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8358162432,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAHyL3AA",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358162432",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T19:42:35Z"
    },
    {
      "event": "commented",
      "id": 1404182529,
      "node_id": "IC_kwDOEEET9c5TsiAB",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1404182529",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z",
      "updated_at": "2023-01-25T20:24:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Summary of changes just pushed:\r\n\r\n- Changed the regex for a simpler string splitter, while still mantaining the syntax and several argument separators (beyond whitespace) supported by the console. Code now runs 180X faster (thanks @furszy and @andrewtoth for the suggestion)\r\n- Moved the implementation to a separate method that deals with these console-only commands (@rserranon)Also moved the already implemented \"help-console\" command handling to this method.\r\n- Added \"help generate\" code \r\n- Cleaned some code formatting issues according to clang-format ( thanks @jarolrod  for the last two :)  )\r\n- Squashed all changes on a single commit\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1404182529",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8358447535,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHyM8mv",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447535",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z"
    },
    {
      "event": "subscribed",
      "id": 8358447544,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHyM8m4",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447544",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z"
    },
    {
      "event": "mentioned",
      "id": 8358447563,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHyM8nL",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447563",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z"
    },
    {
      "event": "subscribed",
      "id": 8358447577,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHyM8nZ",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447577",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z"
    },
    {
      "event": "mentioned",
      "id": 8358447588,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHyM8nk",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447588",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:51Z"
    },
    {
      "event": "subscribed",
      "id": 8358447597,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHyM8nt",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447597",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:52Z"
    },
    {
      "event": "mentioned",
      "id": 8358447609,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAHyM8n5",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447609",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:52Z"
    },
    {
      "event": "subscribed",
      "id": 8358447615,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAHyM8n_",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358447615",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:24:52Z"
    },
    {
      "event": "review_requested",
      "id": 8358489192,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAHyNGxo",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8358489192",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-25T20:31:38Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8377972261,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAHzXbYl",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8377972261",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T22:44:15Z"
    },
    {
      "event": "review_request_removed",
      "id": 8391814921,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAH0MO8J",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8391814921",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T19:36:42Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8391814936,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAH0MO8Y",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8391814936",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T19:36:43Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1277998275,
      "node_id": "PRR_kwDOEEET9c5MLLTD",
      "url": null,
      "actor": null,
      "commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re ack 3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0, cleaner than before.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1277998275",
      "submitted_at": "2023-01-31T20:48:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1281841521,
      "node_id": "PRR_kwDOEEET9c5MZ1lx",
      "url": null,
      "actor": null,
      "commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1281841521",
      "submitted_at": "2023-02-02T20:20:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1289932120,
      "node_id": "PRR_kwDOEEET9c5M4s1Y",
      "url": null,
      "actor": null,
      "commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Noticed that we are calling cli-only commands with the \"-\" prefix. Would be good to follow the same convention here too.\r\nThe renaming will let us detect them in a simpler manner by checking the first character without requiring to split the string etc.\r\n\r\n\r\nAside from that, now talking about the current changes:\r\nWhat do you think about structuring the changes a bit differently so your patch set is focused to the introduced feature, and we can continue expanding the cli-only options in the future:\r\n\r\n```c++\r\nif (IsCliOnlyCommand(executableCommand)) { // --> here we check if string starts with \"-\". \r\n    // Execute cli-only commands\r\n    if (!ExecuteCliCommand(executableCommand, result, etc)) { // --> This function will dispatch cli-only commands (\"-generate\" should be placed into its own standalone function).\r\n         // emit any error here or inside the function\r\n         return;\r\n    }\r\n} else {\r\n   // Execute RPC commands\r\n   if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n        // etc...\r\n}\r\n```",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1289932120",
      "submitted_at": "2023-02-08T20:11:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1426394741,
      "node_id": "IC_kwDOEEET9c5VBQ51",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1426394741",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-10T21:59:27Z",
      "updated_at": "2023-02-10T21:59:27Z",
      "author_association": "NONE",
      "body": "> ```c++\r\n> if (IsCliOnlyCommand(executableCommand)) { // --> here we check if string starts with \"-\". \r\n>     // Execute cli-only commands\r\n>     if (!ExecuteCliCommand(executableCommand, result, etc)) { // --> This function will dispatch cli-only commands (\"-generate\" should be placed into its own standalone function).\r\n>          // emit any error here or inside the function\r\n>          return;\r\n>     }\r\n> } else {\r\n>    // Execute RPC commands\r\n>    if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n>         // etc...\r\n> }\r\n> ```\r\n\r\nI agree with furszy's idea of introducing the functions `IsCliOnlyCommand ` and `ExecuteCliCommand `, to implement the `generate` cli-only command, for a cleaner implementation and with the advantage of leaving the structure ready for potential expansion of additional cli-only commands.",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1426394741",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "reviewed",
      "id": 1296477629,
      "node_id": "PRR_kwDOEEET9c5NRq29",
      "url": null,
      "actor": null,
      "commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I wouldn't change the naming convention of the `generate` command in the \"RPC Console\" to `-generate` in order to match cli-commands. If we start to implement such commands into here maybe I'd think about it but this is the \"RPC Console\" it has a different purpose even the final objective is to communicate with the node.\r\n\r\nAlso, as soon we do this, code-wise, we would need to remove the `RPCHelpMan` in [`src/rpc/mining.cpp`](https://github.com/bitcoin/bitcoin/blob/2c1fe27bf3c1e504864987cbe80f9c24897d3cb1/src/rpc/mining.cpp#L237-L242):\r\n\r\n```\r\nstatic RPCHelpMan generate()\r\n{\r\n    return RPCHelpMan{\"generate\", \"has been replaced by the -generate cli option. Refer to -help for more information.\", {}, {}, RPCExamples{\"\"}, [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\r\n        throw JSONRPCError(RPC_METHOD_NOT_FOUND, self.ToString());\r\n    }};\r\n}\r\n```\r\n\r\nOtherwise we will get this message error:\r\n\r\n![image](https://user-images.githubusercontent.com/110166421/218578720-4daa9d80-968f-41c0-b0b7-2726eb2023c4.png)\r\n\r\nAnd if we do that, any other app trying to send the 'generate` command via RPC would receive the `method not found` error:\r\n\r\n![image](https://user-images.githubusercontent.com/110166421/218579028-ea37b079-0159-4c93-bcba-706f1f7353ce.png)\r\n\r\nI believe the code is good as it is so far and as a first and safe approach to resolve the issue.\r\n\r\n\r\n",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1296477629",
      "submitted_at": "2023-02-13T21:36:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1428803693,
      "node_id": "IC_kwDOEEET9c5VKdBt",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1428803693",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T22:43:31Z",
      "updated_at": "2023-02-13T22:51:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Noticed that we are calling cli-only commands with the \"-\" prefix. Would be good to follow the same convention here too. The renaming will let us detect them in a simpler manner by checking the first character without requiring to split the string etc.\r\n\r\nThis seems like something \"nice to have\" but there are other issues apart from what Pablo mentioned that makes me think that we shouldn´t do that: \r\n\r\n- There are other console-only commands that already existed, like  `help-console`\r\n- This PR not only introduces the new behaviour for `generate` but also `help generate` as @jarolrod  suggested\r\n- Future console-only commands that might be introduced later will also require their own `help new_command`\r\n\r\nNone of this commands could be easily renamed to start with \"-\" without breaking \"protocol\"  and backwards compatibility, and if we don't do that, I believe the approach implemented in this PR is good enough. If in any case, if there's further interest to discuss alternatives, perhaps we can take that discussion to a follow-up PR.\r\n\r\n\r\n> Aside from that, now talking about the current changes: What do you think about structuring the changes a bit differently so your patch set is focused to the introduced feature, and we can continue expanding the cli-only options in the future:\r\n> \r\n> ```c++\r\n> if (IsCliOnlyCommand(executableCommand)) { // --> here we check if string starts with \"-\". \r\n>     // Execute cli-only commands\r\n>     if (!ExecuteCliCommand(executableCommand, result, etc)) { // --> This function will dispatch cli-only commands (\"-generate\" should be placed into its own standalone function).\r\n>          // emit any error here or inside the function\r\n>          return;\r\n>     }\r\n> } else {\r\n>    // Execute RPC commands\r\n>    if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n>         // etc...\r\n> }\r\n> ```\r\n\r\nIf we abandon the idea of renaming commands to start with \"-\" the suggested code is very similar to this PR's code, only that the method `ExecuteCliCommand` is called `executeConsoleOnlyCommand`. \r\n\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1428803693",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 8509596489,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAH7NiNJ",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8509596489",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T22:43:31Z"
    },
    {
      "event": "subscribed",
      "id": 8509596502,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAH7NiNW",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8509596502",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T22:43:31Z"
    },
    {
      "event": "commented",
      "id": 1428811330,
      "node_id": "IC_kwDOEEET9c5VKe5C",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1428811330",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T22:50:12Z",
      "updated_at": "2023-02-13T22:50:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I agree with furszy's idea of introducing the functions `IsCliOnlyCommand ` and `ExecuteCliCommand `, to implement the `generate` cli-only command, for a cleaner implementation and with the advantage of leaving the structure ready for potential expansion of additional cli-only commands.\r\n\r\nThe provided method `executeConsoleOnlyCommand` is almost identical to the suggested `ExecuteCliCommand` and is also ready for potential future new console only commands, the only difference is that it detects ( like `IsCliOnlyCommand` ) and executes commands in a single method.\r\n",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1428811330",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "commented",
      "id": 1428851086,
      "node_id": "IC_kwDOEEET9c5VKomO",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1428851086",
      "actor": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-13T23:22:13Z",
      "updated_at": "2023-02-13T23:22:13Z",
      "author_association": "NONE",
      "body": "testing ACK",
      "user": {
        "login": "rserranon",
        "id": 77761,
        "node_id": "MDQ6VXNlcjc3NzYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/77761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rserranon",
        "html_url": "https://github.com/rserranon",
        "followers_url": "https://api.github.com/users/rserranon/followers",
        "following_url": "https://api.github.com/users/rserranon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rserranon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rserranon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rserranon/subscriptions",
        "organizations_url": "https://api.github.com/users/rserranon/orgs",
        "repos_url": "https://api.github.com/users/rserranon/repos",
        "events_url": "https://api.github.com/users/rserranon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rserranon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1428851086",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "reviewed",
      "id": 1301800961,
      "node_id": "PRR_kwDOEEET9c5Nl-gB",
      "url": null,
      "actor": null,
      "commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept, approach, and tested ACK, this is a nice improvement. It might be good to prepend \"test:\" to the title of this PR (and this might pick up the \"test\" label, which would be nice). I suggest making that change to the commit title too (\"test: qt: add generate ...\"). If you'd like to make some or all of these suggested changes, I'll re-review.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1301800961",
      "submitted_at": "2023-02-16T16:52:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1441833350,
      "node_id": "IC_kwDOEEET9c5V8KGG",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1441833350",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T13:49:33Z",
      "updated_at": "2023-02-23T14:01:16Z",
      "author_association": "MEMBER",
      "body": "All good about the none usage of the \"-\" prefix on the GUI 👍🏼 .\r\n\r\n > The provided method executeConsoleOnlyCommand is almost identical to the suggested ExecuteCliCommand and is also ready for potential future new console only commands, the only difference is that it detects ( like IsCliOnlyCommand ) and executes commands in a single method.\r\n\r\nI'm not fan of the current method mostly because the `parsedCommand.size() > something` and `parsedCommand.size() < something_else` checks.\r\nThose are specific checks that should be done inside each command function, and not at the top level dispatcher function.\r\n\r\nA slightly modified version of the code that shared before so we are in the same page:\r\n```c++\r\nstd::string cli_command;\r\nif (IsCliOnlyCommand(executableCommand, cli_command)) {  // Check against a list of known cli-only commands and return the command inside \"cli_command\".\r\n    // Craft Cli Command\r\n    std::string res_cli_only_command;\r\n    if (!CraftCliCommand(cli_command, executableCommand, res_cli_only_command)) {\r\n         return; // errors could be emitted inside the function or here if it returns an error.\r\n    }\r\n    // Update command\r\n    executableCommand = res_cli_only_command;\r\n}\r\n\r\n// Execute command\r\nif (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n    // etc...\r\n```\r\n\r\nThen could do something like:\r\n\r\n```c++\r\nbool CraftCliCommand(const std::string& cli_command, const std::string& executableCommand, std::string& command_ret)\r\n{\r\n    switch(cli_command) {\r\n        case GENERATE_COMMAND:\r\n            command_ret  = craftGenerateCommand(executableCommand);\r\n            return true;\r\n        case OTHER_CLI_COMMAND:\r\n            command_ret  = craftOtherCliCommand(executableCommand);\r\n            return true;\r\n        // etc..\r\n    }\r\n\r\n    // command not implemented.\r\n    return false;\r\n}\r\n\r\n```\r\n\r\nIn this way, each command is contained within their own function and new checks/changes can be added or removed without requiring to modify the top level function.\r\nWhat do you think?",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1441833350",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8642530142,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAIDIote",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8642530142",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-01T20:47:25Z"
    },
    {
      "event": "review_request_removed",
      "id": 8650802060,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAIDoMOM",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8650802060",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T15:38:38Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8650802076,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAIDoMOc",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/8650802076",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T15:38:38Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1342499652,
      "node_id": "PRR_kwDOEEET9c5QBOtE",
      "url": null,
      "actor": null,
      "commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tested 037e8b01386d5f30f295eec53eb939204b855cb4",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1342499652",
      "submitted_at": "2023-03-15T22:15:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1359033276,
      "node_id": "PRR_kwDOEEET9c5RATO8",
      "url": null,
      "actor": null,
      "commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Could this PR be separated in two commits:\r\n- refactoring and introducing the `RPCExecutor::executeConsoleOnlyCommand()` function\r\n- actually adding support for the `generate` command`\r\n\r\n?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1359033276",
      "submitted_at": "2023-03-27T13:26:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1485269836,
      "node_id": "IC_kwDOEEET9c5Yh2tM",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1485269836",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T14:56:57Z",
      "updated_at": "2023-03-27T14:56:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Could this PR be separated in two commits:\r\n> \r\n> * refactoring and introducing the `RPCExecutor::executeConsoleOnlyCommand()` function\r\n> * actually adding support for the `generate` command`\r\n> \r\n> ?\r\n\r\nYes, will do ASAP.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1485269836",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9234584560,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAImbJPw",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9234584560",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T16:05:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9236206917,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAImhVVF",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9236206917",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T19:57:28Z"
    },
    {
      "event": "commented",
      "id": 1550418936,
      "node_id": "IC_kwDOEEET9c5caYP4",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1550418936",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:08:40Z",
      "updated_at": "2023-05-16T22:08:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "As requested by @hebasto i splitted this PR in 2 commits : \r\nad5642ae91beb522b6ae806f28cb015a759d1d19 refactors the code to prepare for the new functionality implemented in the following commit, as well as for future console-only commands to be added.\r\n\r\n411b1da407f78f2f973f90d48676ce1ae26734a7  adds the new \"generate\" command, as well as the updated \"help generate\"",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1550418936",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 9262854727,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAIoG_JH",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9262854727",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:08:40Z"
    },
    {
      "event": "subscribed",
      "id": 9262854736,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAIoG_JQ",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9262854736",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T22:08:41Z"
    },
    {
      "event": "review_requested",
      "id": 9282730909,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAIpSzud",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9282730909",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:38:23Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9282731349,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAIpSz1V",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9282731349",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T18:38:27Z",
      "requested_reviewer": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1433505009,
      "node_id": "PRR_kwDOEEET9c5VcYzx",
      "url": null,
      "actor": null,
      "commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Liked the refactoring and the 2 commits split as @hebasto requested.\r\nTested ACK both commits separately, also checked also other RPC commands, it works as expected.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1433505009",
      "submitted_at": "2023-05-18T21:51:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1439888882,
      "node_id": "PRR_kwDOEEET9c5V0vXy",
      "url": null,
      "actor": null,
      "commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looking much better, thanks for applying the suggestions 👌🏼.\r\n\r\nLeft few comments, it's getting closer.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1439888882",
      "submitted_at": "2023-05-23T15:11:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1477911157,
      "node_id": "PRR_kwDOEEET9c5YFyJ1",
      "url": null,
      "actor": null,
      "commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I think you'd need to check some comments.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1477911157",
      "submitted_at": "2023-06-13T19:54:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1590840776,
      "node_id": "IC_kwDOEEET9c5e0k3I",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1590840776",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T09:32:01Z",
      "updated_at": "2023-06-14T09:32:01Z",
      "author_association": "MEMBER",
      "body": "@hernanmarino Are you still working on this PR?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1590840776",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 9526041654,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAI3y9w2",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9526041654",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T09:32:02Z"
    },
    {
      "event": "subscribed",
      "id": 9526041685,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAI3y9xV",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9526041685",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T09:32:02Z"
    },
    {
      "event": "commented",
      "id": 1591276054,
      "node_id": "IC_kwDOEEET9c5e2PIW",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1591276054",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:03:47Z",
      "updated_at": "2023-06-14T14:03:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @hernanmarino Are you still working on this PR?\r\n\r\nYes, will update ASAP.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1591276054",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 9529151982,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAI3-1Hu",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9529151982",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:03:48Z"
    },
    {
      "event": "subscribed",
      "id": 9529152007,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAI3-1IH",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9529152007",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T14:03:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9546447133,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAI5Azkd",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9546447133",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T01:51:41Z"
    },
    {
      "event": "commented",
      "id": 1593978679,
      "node_id": "IC_kwDOEEET9c5fAi83",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1593978679",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T02:03:27Z",
      "updated_at": "2023-06-16T02:03:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I changed the code to address @furszy's suggestions. The new commit hashes are:\r\n[`aa898d6`](https://github.com/bitcoin-core/gui/pull/692/commits/aa898d6a72643542c08f061086ec7eaeb9e16e78) refactors the code to prepare for the new functionality implemented in the following commit, as well as for future console-only commands to be added.\r\n\r\n[`1db3da2`](https://github.com/bitcoin-core/gui/pull/692/commits/1db3da2f8b30221f0a94b5881577e2704c1e6da7) adds the new \"generate\" command, as well as the updated \"help generate\" ",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1593978679",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 9546506636,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAI5BCGM",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9546506636",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T02:03:27Z"
    },
    {
      "event": "subscribed",
      "id": 9546506645,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAI5BCGV",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9546506645",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T02:03:27Z"
    },
    {
      "event": "reviewed",
      "id": 1494968007,
      "node_id": "PRR_kwDOEEET9c5ZG2bH",
      "url": null,
      "actor": null,
      "commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK, verified all code changes, nice job.\r\nTested the following commands in the RPC Console window in qt using `regtest`: `generate` (also with invalid arguments), `help`, `help-console`, `help generate`, `getblockhash 0`, `getindexinfo`.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1494968007",
      "submitted_at": "2023-06-23T11:26:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "review_requested",
      "id": 9709569515,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJCvEXr",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9709569515",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-03T13:52:40Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1491894680,
      "node_id": "PRR_kwDOEEET9c5Y7IGY",
      "url": null,
      "actor": null,
      "commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left a quick review, not really blocking. Mostly performance and code improvements.\r\nWill finish testing it later today and ACK it if all goes well.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1491894680",
      "submitted_at": "2023-07-03T14:31:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "reviewed",
      "id": 1511346984,
      "node_id": "PRR_kwDOEEET9c5aFVMo",
      "url": null,
      "actor": null,
      "commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Two small scenarios to fix:\r\n\r\n1) Should guard `generate` from using negative numbers. Currently, can call `generate -20` and the process will return an empty blocks array instead of failing.\r\n2) The `generatetoaddress` result has a bracket without the correct indentation. See \r\n<img width=\"549\" alt=\"screenshot\" src=\"https://github.com/bitcoin-core/gui/assets/5377650/d1459746-0732-4dd2-90b4-d2403704677c\">\r\n",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1511346984",
      "submitted_at": "2023-07-03T14:50:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "commented",
      "id": 1654620797,
      "node_id": "IC_kwDOEEET9c5in4J9",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1654620797",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T21:39:19Z",
      "updated_at": "2023-07-27T21:39:19Z",
      "author_association": "MEMBER",
      "body": "Approach NACK. If we're going to go this route, we can just add back the RPC method... :/",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1654620797",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10278557594,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAJkplea",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10278557594",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T04:01:24Z"
    },
    {
      "event": "labeled",
      "id": 10279061627,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAAJkrgh7",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10279061627",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T05:43:35Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10285628876,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAJlEj3M",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10285628876",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T16:06:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10285892131,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAJlFkIj",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10285892131",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T16:46:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10286812548,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAJlJE2E",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10286812548",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T18:25:42Z"
    },
    {
      "event": "review_requested",
      "id": 10286823896,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJlJHnY",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10286823896",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T18:27:03Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10287703319,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJlMeUX",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10287703319",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T20:17:47Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "unlabeled",
      "id": 10287806526,
      "node_id": "UNLE_lADOEEET9c5aLhyozwAAAAJlM3g-",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10287806526",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T20:30:52Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "commented",
      "id": 1707493932,
      "node_id": "IC_kwDOEEET9c5lxkos",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1707493932",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T00:53:31Z",
      "updated_at": "2023-09-06T00:53:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated with all the changes suggested by @furszy in his latest review.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1707493932",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 10289434169,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAJlTE45",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10289434169",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T00:53:31Z"
    },
    {
      "event": "subscribed",
      "id": 10289434187,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAJlTE5L",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10289434187",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-06T00:53:31Z"
    },
    {
      "event": "reviewed",
      "id": 1630145500,
      "node_id": "PRR_kwDOEEET9c5hKgvc",
      "url": null,
      "actor": null,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re tACK e6e0dacc92953f1a190a18bf64d18fd7572354d7\r\n\r\nTested the [2 scenarios](https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1511346984) detected by @furszy above, both fixed.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1630145500",
      "submitted_at": "2023-09-17T22:52:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "review_request_removed",
      "id": 10392148355,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAJra5mD",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10392148355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-17T22:52:06Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1756711948,
      "node_id": "IC_kwDOEEET9c5otUwM",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1756711948",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T03:33:57Z",
      "updated_at": "2023-10-11T03:33:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Approach NACK. If we're going to go this route, we can just add back the RPC method... :/\r\n\r\nI think we can't bring the RPC command back as it was removed to decouple the wallet dependency from the node ([#14468](https://github.com/bitcoin/bitcoin/pull/14468)) simplifying also its interface ([#10973](https://github.com/bitcoin/bitcoin/pull/10973)).\r\n\r\nAlso as `generate` is only used for testing, and it's already implemented in `cli`, personally makes sense to have it in `qt`, as for me is even more practical to use it from the `rpc console` rather than configure `qt` to enable `rpc` (need to add `\"server\": true,` in `settings.json`) and send commands from a terminal with `cli`.\r\n\r\nCode-wise, the first commit, which refactors the current console-side commands (eg `help-console`) allows adding new console commands easily (if we ever need to).",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1756711948",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "review_requested",
      "id": 10612609470,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ4j5G-",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10612609470",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T03:34:02Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10612609517,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ4j5Ht",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10612609517",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T03:34:02Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10612609655,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ4j5J3",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10612609655",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T03:34:04Z",
      "requested_reviewer": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1758160630,
      "node_id": "IC_kwDOEEET9c5oy2b2",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1758160630",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T17:29:24Z",
      "updated_at": "2023-10-11T17:29:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Approach NACK. If we're going to go this route, we can just add back the RPC method... :/\r\n\r\nI understand your point of view, but the reasons mentioned in the issues ( https://github.com/bitcoin-core/gui/issues/55 https://github.com/bitcoin/bitcoin/issues/16000 ), some of them mentioned by Pablo,  encouraged me to work on this. Also, it evolved to (a litlle bit) more than bringing back the RPC call.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1758160630",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "review_request_removed",
      "id": 10621800266,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAJ5G89K",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10621800266",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T17:29:28Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10621800543,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ5G9Bf",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10621800543",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T17:29:30Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1763506920,
      "node_id": "IC_kwDOEEET9c5pHPro",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1763506920",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:12Z",
      "updated_at": "2023-10-15T21:20:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko @jonatack @Sjors since you opened or ACK'ed the original issues I kindly request your review on this PR.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1763506920",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "mentioned",
      "id": 10658508826,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAJ7S_Aa",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508826",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:12Z"
    },
    {
      "event": "subscribed",
      "id": 10658508828,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAJ7S_Ac",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508828",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:13Z"
    },
    {
      "event": "mentioned",
      "id": 10658508832,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAJ7S_Ag",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508832",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:13Z"
    },
    {
      "event": "subscribed",
      "id": 10658508833,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAJ7S_Ah",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508833",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:13Z"
    },
    {
      "event": "mentioned",
      "id": 10658508836,
      "node_id": "MEE_lADOEEET9c5aLhyozwAAAAJ7S_Ak",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508836",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:13Z"
    },
    {
      "event": "subscribed",
      "id": 10658508839,
      "node_id": "SE_lADOEEET9c5aLhyozwAAAAJ7S_An",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508839",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:13Z"
    },
    {
      "event": "review_request_removed",
      "id": 10658508954,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAJ7S_Ca",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508954",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:17Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10658508973,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ7S_Ct",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:18Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10658508983,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ7S_C3",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10658508983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-15T21:20:19Z",
      "requested_reviewer": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1774460777,
      "node_id": "IC_kwDOEEET9c5pxB9p",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1774460777",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T05:27:48Z",
      "updated_at": "2023-10-23T05:27:48Z",
      "author_association": "MEMBER",
      "body": "> Approach NACK. If we're going to go this route, we can just add back the RPC method... :/\r\n\r\nIIUC the reason the RPC method was removed (and replaced with `bitcoin-cli -generate`) is because it had a wallet dependency. The GUI has wallet dependencies all over the place, so I don't see a problem adding this.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1774460777",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "review_request_removed",
      "id": 10735856337,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAJ_6CrR",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10735856337",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T05:27:51Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10735856480,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ_6Ctg",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10735856480",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T05:27:53Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1691733027,
      "node_id": "PRR_kwDOEEET9c5k1cwj",
      "url": null,
      "actor": null,
      "commit_id": "e6e0dacc92953f1a190a18bf64d18fd7572354d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1691733027",
      "submitted_at": "2023-10-23T05:30:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "review_request_removed",
      "id": 10735867496,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAJ_6FZo",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10735867496",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T05:30:04Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10735867597,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAJ_6FbN",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/10735867597",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T05:30:06Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1820787528,
      "node_id": "IC_kwDOEEET9c5shwNI",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1820787528",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T12:02:11Z",
      "updated_at": "2023-11-21T12:02:11Z",
      "author_association": "MEMBER",
      "body": "Related:\r\n- https://github.com/bitcoin/bitcoin/issues/28387\r\n- https://bitcoin.stackexchange.com/questions/119491/generate-regtest-blocks-with-bitcoin-qt/119492",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1820787528",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "review_request_removed",
      "id": 11023460297,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAKRDKfJ",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11023460297",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T12:02:16Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11023460513,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAKRDKih",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11023460513",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-21T12:02:17Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 11423393375,
      "node_id": "RRRE_lADOEEET9c5aLhyozwAAAAKo4yZf",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11423393375",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T22:56:03Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11423393510,
      "node_id": "RRE_lADOEEET9c5aLhyozwAAAAKo4ybm",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11423393510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-08T22:56:05Z",
      "requested_reviewer": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 11481850568,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAAKsXyLI",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11481850568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-14T18:05:10Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOEEET9doAKDFiZjBjMDc1YzdiOGE4OGM4OTc3YjQ5YjcyYTYxZmFmNTMwMDMwNDA",
      "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/gui/commit/1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "tree": {
        "sha": "424aa6028d83affbdca8755636c93f7a83631dc1",
        "url": "https://api.github.com/repos/bitcoin-core/gui/git/trees/424aa6028d83affbdca8755636c93f7a83631dc1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/cad2df24b396be403f13f372ec48ea14a90d7f06",
          "sha": "cad2df24b396be403f13f372ec48ea14a90d7f06",
          "html_url": "https://github.com/bitcoin-core/gui/commit/cad2df24b396be403f13f372ec48ea14a90d7f06"
        }
      ],
      "message": "qt: refactor console-only command parsing",
      "committer": {
        "name": "Hernan Marino",
        "email": "hernanmarino@protonmail.com",
        "date": "2024-01-31T01:47:57Z"
      },
      "author": {
        "name": "Hernan Marino",
        "email": "hmarino@gmail.com",
        "date": "2022-12-26T01:51:50Z"
      },
      "sha": "1bf0c075c7b8a88c8977b49b72a61faf53003040"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOEEET9doAKDJjOTk3NDc0MmQyMDRmYzE0NTU2ODhiOTgxYjMxZDA2OTgzY2I4Yzc",
      "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/2c9974742d204fc1455688b981b31d06983cb8c7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/gui/commit/2c9974742d204fc1455688b981b31d06983cb8c7",
      "tree": {
        "sha": "a26d9770ce3700cbd5a3c10d7bda3a10176dab9a",
        "url": "https://api.github.com/repos/bitcoin-core/gui/git/trees/a26d9770ce3700cbd5a3c10d7bda3a10176dab9a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/1bf0c075c7b8a88c8977b49b72a61faf53003040",
          "sha": "1bf0c075c7b8a88c8977b49b72a61faf53003040",
          "html_url": "https://github.com/bitcoin-core/gui/commit/1bf0c075c7b8a88c8977b49b72a61faf53003040"
        }
      ],
      "message": "qt: add generate command to gui console",
      "committer": {
        "name": "Hernan Marino",
        "email": "hernanmarino@protonmail.com",
        "date": "2024-01-31T01:47:57Z"
      },
      "author": {
        "name": "Hernan Marino",
        "email": "hmarino@gmail.com",
        "date": "2023-05-12T19:46:21Z"
      },
      "sha": "2c9974742d204fc1455688b981b31d06983cb8c7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11649873445,
      "node_id": "HRFPE_lADOEEET9c5aLhyozwAAAAK2YvYl",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11649873445",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T02:05:53Z"
    },
    {
      "event": "unlabeled",
      "id": 11650487337,
      "node_id": "UNLE_lADOEEET9c5aLhyozwAAAAK2bFQp",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11650487337",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T04:08:08Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "commented",
      "id": 1918347305,
      "node_id": "IC_kwDOEEET9c5yV6gp",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1918347305",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T04:11:17Z",
      "updated_at": "2024-01-31T04:11:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on top of master to fix CI errors.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-1918347305",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "reviewed",
      "id": 1852779591,
      "node_id": "PRR_kwDOEEET9c5ubyxH",
      "url": null,
      "actor": null,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Executing `generate 1` on a node without a wallet leads to a crash. And left some other review notes.\r\n\r\nWill read the historical context for the `generate` command deletion before proceed.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#pullrequestreview-1852779591",
      "submitted_at": "2024-01-31T16:00:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
    },
    {
      "event": "labeled",
      "id": 11910046991,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAALF5OUP",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11910046991",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-24T05:12:16Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "unlabeled",
      "id": 11961340708,
      "node_id": "UNLE_lADOEEET9c5aLhyozwAAAALI85Mk",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/11961340708",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-29T06:34:49Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "commented",
      "id": 2169240205,
      "node_id": "IC_kwDOEEET9c6BS_qN",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/2169240205",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-15T09:23:20Z",
      "updated_at": "2024-06-15T09:23:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin-core/gui/runs/21044663226</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-2169240205",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    },
    {
      "event": "labeled",
      "id": 13168106845,
      "node_id": "LE_lADOEEET9c5aLhyozwAAAAMQ4V1d",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/13168106845",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-15T09:23:20Z",
      "label": {
        "name": "CI failed",
        "color": "ededed"
      }
    },
    {
      "event": "commented",
      "id": 2347743841,
      "node_id": "IC_kwDOEEET9c6L77ph",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/2347743841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T00:54:58Z",
      "updated_at": "2024-09-13T00:54:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--2e250dc3d92b2c9115b66051148d6e47-->\n🤔 There hasn't been much activity lately and the CI seems to be failing.\n\nIf no one reviewed the current pull request by commit hash, a [rebase](https://github.com/bitcoin-core/gui/blob/master/CONTRIBUTING.md#rebasing-changes) can be considered. While the CI failure may be a false positive, the CI hasn't been running for some time, so there may be a real issue hiding as well. A rebase triggers the latest CI and makes sure that no silent merge conflicts have snuck in.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#issuecomment-2347743841",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/692"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1058548048",
      "pull_request_review_id": 1231906720,
      "id": 1058548048,
      "node_id": "PRRC_kwDOEEET9c4_GClQ",
      "diff_hunk": "@@ -414,7 +415,34 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            std::string nblocks=match[1];\n+            std::string maxtries=match[2];\n+            if (nblocks==\"\") nblocks = \"1\";\n+            if (maxtries==\"\") maxtries = \"1000000\";",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "454fc48df2c1ec2255eebde04e142af528ba8d54",
      "in_reply_to_id": null,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\r\n            const std::string maxtries{match.str(2) == \"\" ? \"1000000\" : match.str(2)};\r\n\r\n```",
      "created_at": "2022-12-28T19:26:28Z",
      "updated_at": "2022-12-28T21:09:48Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1058548048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1058548048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 422,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1059041725",
      "pull_request_review_id": 1232619132,
      "id": 1059041725,
      "node_id": "PRRC_kwDOEEET9c4_H7G9",
      "diff_hunk": "@@ -414,7 +415,33 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries{match.str(2) == \"\" ? \"1000000\" : match.str(2)};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "b7782a4177977d62a2e2860c3a99b919b8e5b0a2",
      "in_reply_to_id": null,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, just realised, perhaps you don't need to set `maxtries `variable with the default value as in `mining.h`, `DEFAULT_MAX_TRIES`, it's already set if maxtries is empty when you call `generatetoaddress` command implemented at `mining.cpp`, so:\r\n\r\n```suggestion\r\n            const std::string maxtries = match.str[2];\r\n```",
      "created_at": "2022-12-29T16:19:11Z",
      "updated_at": "2022-12-29T16:22:17Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1059041725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1059041725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1059659286",
      "pull_request_review_id": 1233362990,
      "id": 1059659286,
      "node_id": "PRRC_kwDOEEET9c4_KR4W",
      "diff_hunk": "@@ -414,7 +415,33 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries{match.str(2) == \"\" ? \"1000000\" : match.str(2)};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "b7782a4177977d62a2e2860c3a99b919b8e5b0a2",
      "in_reply_to_id": 1059041725,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I'll test it and perhaps update the code in the next commit.",
      "created_at": "2022-12-31T16:01:28Z",
      "updated_at": "2022-12-31T16:01:29Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1059659286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1059659286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181340",
      "pull_request_review_id": 1233972927,
      "id": 1060181340,
      "node_id": "PRRC_kwDOEEET9c4_MRVc",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is pretty complicated regex. Would it be easier to split `executableCommand` into tokens separated by whitespace?",
      "created_at": "2023-01-02T20:25:32Z",
      "updated_at": "2023-01-02T20:25:32Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1060181340",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 418,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181607",
      "pull_request_review_id": 1233973285,
      "id": 1060181607,
      "node_id": "PRRC_kwDOEEET9c4_MRZn",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries = match.str(2);",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            const std::string maxtries{match.str(2)};\r\n```",
      "created_at": "2023-01-02T20:26:51Z",
      "updated_at": "2023-01-02T20:26:51Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1060181607",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181916",
      "pull_request_review_id": 1233973690,
      "id": 1060181916,
      "node_id": "PRRC_kwDOEEET9c4_MRec",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries = match.str(2);\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+            }\n+            else {\n+                std::string address = result;",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                const std::string address{result};\r\n```",
      "created_at": "2023-01-02T20:28:28Z",
      "updated_at": "2023-01-02T20:28:28Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1060181916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060181916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060183531",
      "pull_request_review_id": 1233975784,
      "id": 1060183531,
      "node_id": "PRRC_kwDOEEET9c4_MR3r",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": 1060181340,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See https://github.com/bitcoin/bitcoin/blob/master/src/bitcoin-cli.cpp#L679-L684.",
      "created_at": "2023-01-02T20:37:28Z",
      "updated_at": "2023-01-02T20:37:28Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1060183531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060183531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 418,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060183867",
      "pull_request_review_id": 1233976159,
      "id": 1060183867,
      "node_id": "PRRC_kwDOEEET9c4_MR87",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries = match.str(2);\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+            }\n+            else {\n+                std::string address = result;\n+                if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+                } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \"+ result + \"\\n}\";",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we use `UniValue` to parse the result and response? See https://github.com/bitcoin/bitcoin/blob/master/src/bitcoin-cli.cpp#L686-L692",
      "created_at": "2023-01-02T20:39:09Z",
      "updated_at": "2023-01-02T20:39:09Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1060183867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1060183867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1080764153",
      "pull_request_review_id": 1261059380,
      "id": 1080764153,
      "node_id": "PRRC_kwDOEEET9c5Aayb5",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": 1060181340,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At first I considered a similar approach,  but since QT console's commands are not simply separated by whitespace I decided to go with a regex.\r\nFor reference you can take a look at the complexity of the parser with more than a couple of hundred lines of code at https://github.com/bitcoin-core/gui/blob/8ae2808a4354e8dcc697f76bacc5e2f2befe9220/src/qt/rpcconsole.cpp#L169-L409",
      "created_at": "2023-01-19T03:04:32Z",
      "updated_at": "2023-01-19T03:04:32Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1080764153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1080764153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 418,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1087014732",
      "pull_request_review_id": 1269889577,
      "id": 1087014732,
      "node_id": "PRRC_kwDOEEET9c5AyodM",
      "diff_hunk": "@@ -414,7 +415,32 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     {\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n-\n+        std::regex validRegex(\"generate\\\\s*[\\\\(]?\\\\s*(\\\\d+)?\\\\s*[,]?\\\\s*(\\\\d+)?\\\\s*[\\\\)]?\\\\s*\");\n+        std::regex invalidRegex(\"generate[\\\\s\\\\(]+.*\");\n+        std::smatch match;\n+        if (std::regex_match(executableCommand, match, validRegex)) {\n+            const std::string nblocks{match.str(1) == \"\" ? \"1\" : match.str(1)};\n+            const std::string maxtries = match.str(2);\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+            }\n+            else {\n+                std::string address = result;\n+                if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+                } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \"+ result + \"\\n}\";",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "9b0b762fd774207d127213c1c9da354aef38e739",
      "in_reply_to_id": 1060183867,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hi @andrewtoth . I don't think it's really necesary , `bitcoin-qt `seems to take a different approach than `bitcoin-cli`, using strings and QStrings for communicating results. And although the RPC logic for actual commands use `Univalue` , these are commands intercepted and executed before that logic. Since the inputs (both address and block hashes) and the output needed are already both strings , using an `Univalue` as an intermediate object that is not used elsewhere, seems unnecesary. Unless you can observe something else that I'm missing, I prefer to leave this as a regular string.",
      "created_at": "2023-01-25T18:22:30Z",
      "updated_at": "2023-01-25T18:22:31Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1087014732",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1087014732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108701947",
      "pull_request_review_id": 1301800961,
      "id": 1108701947,
      "node_id": "PRRC_kwDOEEET9c5CFXL7",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\r\n    auto should_remove{[](const std::string& str) { return str.empty(); }};\r\n```",
      "created_at": "2023-02-16T16:08:08Z",
      "updated_at": "2023-02-16T16:52:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1108701947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108701947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 460,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 461,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108706223",
      "pull_request_review_id": 1301800961,
      "id": 1108706223,
      "node_id": "PRRC_kwDOEEET9c5CFYOv",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 98,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\r\n```",
      "created_at": "2023-02-16T16:10:58Z",
      "updated_at": "2023-02-16T16:52:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1108706223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108706223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 490,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108713424",
      "pull_request_review_id": 1301800961,
      "id": 1108713424,
      "node_id": "PRRC_kwDOEEET9c5CFZ_Q",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            auto executableCommand = \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries;\r\n            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand + \"\\n\", nullptr, wallet_model)) {\r\n```\r\nAlso remove the declaration of `executableCommand` near the top of the function; better to declare variables only where and when needed. You could do similarly with `result` and `address`.",
      "created_at": "2023-02-16T16:16:35Z",
      "updated_at": "2023-02-16T16:52:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1108713424",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108713424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 493,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108718036",
      "pull_request_review_id": 1301800961,
      "id": 1108718036,
      "node_id": "PRRC_kwDOEEET9c5CFbHU",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This line is indented one tab stop too much, and same for the two lines just below (after the `else`).",
      "created_at": "2023-02-16T16:20:23Z",
      "updated_at": "2023-02-16T16:52:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1108718036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108718036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108736164",
      "pull_request_review_id": 1301800961,
      "id": 1108736164,
      "node_id": "PRRC_kwDOEEET9c5CFfik",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\n+            }\n+        }\n+        return true;\n+    }\n+    // Catch the console-only \"help generate\" command when requested, or when \"generate is called with wrong parameters.\n+    if ((parsedCommand.size() >= 2 && parsedCommand[0] == \"help\" && parsedCommand[1] == \"generate\") || (parsedCommand.size() > 3 && parsedCommand[0] == \"generate\")) {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY, QString((\"\\n\"\n+                                                     \"Generate blocks, equivalent to RPC getnewaddress followed by RPC generatetoaddress.\\n\"\n+                                                     \"Optional integer arguments are number of blocks to generate and maximum iterations to try.\\n\"\n+                                                     \"Equivalent to RPC generatetoaddress nblocks and maxtries arguments.\\n\"\n+                                                     \"   example:    generate\\n\"\n+                                                     \"   example:    generate 4\\n\"\n+                                                     \"   example:    generate 3 6000\\n\\n\")));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 119,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Formatting-only suggestion (personal preference to avoid long lines), and the argument to `QString()` had extra parentheses. Could make a similar change below.\r\n```suggestion\r\n        if ((parsedCommand.size() > 1 && parsedCommand[0] == \"help\" && parsedCommand[1] == \"generate\") ||\r\n            (parsedCommand.size() > 3 && parsedCommand[0] == \"generate\")) {\r\n                auto message{\r\n                    \"\\n\"\r\n                    \"Generate blocks, equivalent to RPC getnewaddress followed by RPC generatetoaddress.\\n\"\r\n                    \"Optional integer arguments are number of blocks to generate and maximum iterations to try.\\n\"\r\n                    \"Equivalent to RPC generatetoaddress nblocks and maxtries arguments.\\n\"\r\n                    \"   example:    generate\\n\"\r\n                    \"   example:    generate 4\\n\"\r\n                    \"   example:    generate 3 6000\\n\\n\"};\r\n                Q_EMIT reply(RPCConsole::CMD_REPLY, QString(message));\r\n```",
      "created_at": "2023-02-16T16:34:24Z",
      "updated_at": "2023-02-16T16:52:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1108736164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1108736164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 504,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 511,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122161205",
      "pull_request_review_id": 1320416052,
      "id": 1122161205,
      "node_id": "PRRC_kwDOEEET9c5C4tI1",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": 1108713424,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I ' ll actually remove the variable `executableCommand` since it's only used once, I prefer avoiding memory overhead and better speed execution (although minimal). Okey with the other 2 variables",
      "created_at": "2023-03-01T18:37:39Z",
      "updated_at": "2023-03-01T18:42:40Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1122161205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122161205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 493,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122164062",
      "pull_request_review_id": 1320420113,
      "id": 1122164062,
      "node_id": "PRRC_kwDOEEET9c5C4t1e",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": 1108718036,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indentation was introduced after running the script suggested by @ jarolrod and are apparently ok according to clang format standard.",
      "created_at": "2023-03-01T18:40:38Z",
      "updated_at": "2023-03-01T18:40:38Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1122164062",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122164062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122165135",
      "pull_request_review_id": 1320422431,
      "id": 1122165135,
      "node_id": "PRRC_kwDOEEET9c5C4uGP",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\n+            }\n+        }\n+        return true;\n+    }\n+    // Catch the console-only \"help generate\" command when requested, or when \"generate is called with wrong parameters.\n+    if ((parsedCommand.size() >= 2 && parsedCommand[0] == \"help\" && parsedCommand[1] == \"generate\") || (parsedCommand.size() > 3 && parsedCommand[0] == \"generate\")) {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY, QString((\"\\n\"\n+                                                     \"Generate blocks, equivalent to RPC getnewaddress followed by RPC generatetoaddress.\\n\"\n+                                                     \"Optional integer arguments are number of blocks to generate and maximum iterations to try.\\n\"\n+                                                     \"Equivalent to RPC generatetoaddress nblocks and maxtries arguments.\\n\"\n+                                                     \"   example:    generate\\n\"\n+                                                     \"   example:    generate 4\\n\"\n+                                                     \"   example:    generate 3 6000\\n\\n\")));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 119,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": 1108736164,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed extra parenthesis, and I agree with extra long lines, but as I said before, indentation was introduced after running the script suggested by @ jarolrod and are apparently ok according to clang format standard.",
      "created_at": "2023-03-01T18:41:46Z",
      "updated_at": "2023-03-01T18:41:46Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1122165135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1122165135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 504,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 511,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137821241",
      "pull_request_review_id": 1342499652,
      "id": 1137821241,
      "node_id": "PRRC_kwDOEEET9c5D0cY5",
      "diff_hunk": "@@ -415,35 +417,15 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n \n-        // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n-        if(executableCommand == \"help-console\\n\") {\n-            Q_EMIT reply(RPCConsole::CMD_REPLY, QString((\"\\n\"\n-                \"This console accepts RPC commands using the standard syntax.\\n\"\n-                \"   example:    getblockhash 0\\n\\n\"\n-\n-                \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n-                \"   example:    getblockhash(0)\\n\\n\"\n-\n-                \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n-\n-                \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n-                \"   example:    getblockhash 0\\n\"\n-                \"               getblockhash,0\\n\\n\"\n-\n-                \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n-\n-                \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\")));\n-            return;\n-        }\n-        if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\n-            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n-            return;\n+        // Attempt to execute console-only commands\n+        if (!RPCExecutor::executeConsoleOnlyCommand(executableCommand, wallet_model)) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if (RPCExecutor::executeConsoleOnlyCommand(executableCommand, wallet_model)) {\r\n            return;\r\n        }\r\n```\r\n(or could put `return` on the same line)",
      "created_at": "2023-03-15T22:04:22Z",
      "updated_at": "2023-03-15T22:15:35Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1137821241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137821241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137822858",
      "pull_request_review_id": 1342499652,
      "id": 1137822858,
      "node_id": "PRRC_kwDOEEET9c5D0cyK",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "these can be removed",
      "created_at": "2023-03-15T22:06:35Z",
      "updated_at": "2023-03-15T22:15:35Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1137822858",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137822858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 477,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 478,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137822991",
      "pull_request_review_id": 1342499652,
      "id": 1137822991,
      "node_id": "PRRC_kwDOEEET9c5D0c0P",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const std::vector<std::string> parsedCommand{parseHelper(command)};\r\n```",
      "created_at": "2023-03-15T22:06:49Z",
      "updated_at": "2023-03-15T22:15:35Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1137822991",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137822991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137827055",
      "pull_request_review_id": 1342499652,
      "id": 1137827055,
      "node_id": "PRRC_kwDOEEET9c5D0dzv",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": 1108718036,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's strange, when I run `clang-format-diff`, it moves this left, where they should be:\r\n\r\n<details>\r\n<summary>click to expand</summary>\r\n\r\n```\r\n$ git show -U0 | ./contrib/devtools/clang-format-diff.py -p1 -i -v\r\nFormatting src/qt/rpcconsole.cpp\r\n$ git diff\r\ndiff --git a/src/qt/rpcconsole.cpp b/src/qt/rpcconsole.cpp\r\nindex 1408b289f..63820464b 100644\r\n--- a/src/qt/rpcconsole.cpp\r\n+++ b/src/qt/rpcconsole.cpp\r\n@@ -419,12 +419,12 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\r\n \r\n         // Attempt to execute console-only commands\r\n         if (!RPCExecutor::executeConsoleOnlyCommand(executableCommand, wallet_model)) {\r\n-                // Send to the RPC command parser if not console-only\r\n-                if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n-                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\r\n-                    return;\r\n-                }\r\n-                Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(result));\r\n+            // Send to the RPC command parser if not console-only\r\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\r\n+                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\r\n+                return;\r\n+            }\r\n+            Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(result));\r\n         }\r\n     }\r\n     catch (UniValue& objError)\r\n@@ -492,10 +492,10 @@ bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const Wa\r\n             Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\r\n         } else {\r\n             if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\r\n-                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\r\n+                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\r\n             } else {\r\n-                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\r\n-                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\r\n+                std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\r\n+                Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\r\n             }\r\n         }\r\n         return true;\r\n```\r\n</details>",
      "created_at": "2023-03-15T22:12:48Z",
      "updated_at": "2023-03-15T22:15:35Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1137827055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137827055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137927627",
      "pull_request_review_id": 1342645903,
      "id": 1137927627,
      "node_id": "PRRC_kwDOEEET9c5D02XL",
      "diff_hunk": "@@ -464,6 +446,101 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    std::vector<std::string> vec = SplitString(strCommand, \" (),\\n\");\n+    auto should_remove = [](const std::string& str) { return str.empty(); };\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    std::string result;\n+    std::string address;\n+    std::string executableCommand;\n+    std::vector<std::string> parsedCommand{parseHelper(command)};\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsedCommand.empty() && parsedCommand[0] == \"generate\" && parsedCommand.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsedCommand.size() > 1 ? parsedCommand[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsedCommand.size() > 2 ? parsedCommand[2] : \"\"};\n+\n+        // Generate address\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            executableCommand = \"generatetoaddress \" + nblocks + \" \\\"\" + address + \"\\\" \" + maxtries;\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "3f8fe6fd698380d659e5c88b0795f8d6ea3a2be0",
      "in_reply_to_id": 1108718036,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll try from my side and give it a go later this week.",
      "created_at": "2023-03-16T00:34:27Z",
      "updated_at": "2023-03-16T00:34:28Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1137927627",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1137927627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1149235477",
      "pull_request_review_id": 1359033276,
      "id": 1149235477,
      "node_id": "PRRC_kwDOEEET9c5Ef_EV",
      "diff_hunk": "@@ -96,6 +96,8 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    std::vector<std::string> parseHelper(const std::string& strCommand);",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "037e8b01386d5f30f295eec53eb939204b855cb4",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Naming nit:\r\n```suggestion\r\n    std::vector<std::string> parseHelper(const std::string& str_command);\r\n```",
      "created_at": "2023-03-27T13:25:27Z",
      "updated_at": "2023-03-27T13:26:27Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1149235477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1149235477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202468603",
      "pull_request_review_id": 1439888882,
      "id": 1202468603,
      "node_id": "PRRC_kwDOEEET9c5HrDb7",
      "diff_hunk": "@@ -96,6 +96,16 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    static std::vector<std::string> parseHelper(const std::string& strCommand);\n+    static bool commandMatches(const std::vector<std::string>& parsed_command, const std::string& key);",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642ae:\r\n\r\nThis two declarations can be removed. Can just make the definition static.",
      "created_at": "2023-05-23T14:45:34Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202468603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202468603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202477990",
      "pull_request_review_id": 1439888882,
      "id": 1202477990,
      "node_id": "PRRC_kwDOEEET9c5HrFum",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642ae:\r\n\r\nCan remove the \"\\n\" separator by providing the `command` variable instead of the `executableCommand` string at line 428. The code adds the \"\\n\" few lines before calling `executeConsoleOnlyCommand`.",
      "created_at": "2023-05-23T14:50:21Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202477990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202477990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 468,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202482937",
      "pull_request_review_id": 1439888882,
      "id": 1202482937,
      "node_id": "PRRC_kwDOEEET9c5HrG75",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642ae:\r\n\r\nCan remove the conditional statement entirely and always return true.\r\n\r\n1) Functions are mapped in a  \"command name\" -> function map structure. The code will never reach this point If the command wouldn't be a `help-console`.\r\n\r\n2) The  `!parsed_command.empty()` statement is not needed. It will never be empty at this point, the parent dispatcher function already checks for emptiness.",
      "created_at": "2023-05-23T14:52:36Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202482937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202482937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202493790",
      "pull_request_review_id": 1439888882,
      "id": 1202493790,
      "node_id": "PRRC_kwDOEEET9c5HrJle",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+    if (parsed_command.empty()) {\n+        return false;\n+    } else {\n+        // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key\n+        for (auto const& [key, method] : m_method_map) {\n+            if (commandMatches(parsed_command, key)) {\n+                    return (this->*method)(parsed_command, wallet_model);\n+            }",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 148,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642ae:\r\n\r\nWrong Indentation here.",
      "created_at": "2023-05-23T14:58:12Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202493790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202493790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 538,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202498803",
      "pull_request_review_id": 1439888882,
      "id": 1202498803,
      "node_id": "PRRC_kwDOEEET9c5HrKzz",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+    if (parsed_command.empty()) {\n+        return false;\n+    } else {\n+        // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642ae:\r\n\r\nI think that would be cleaner to change the if/else to:\r\n\r\n```c++\r\nconst std::vector<std::string> parsed_command{parseHelper(command)};\r\nif (parsed_command.empty()) return false;\r\n\r\n// Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key\r\netc..\r\n```",
      "created_at": "2023-05-23T15:00:57Z",
      "updated_at": "2023-05-23T15:13:06Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202498803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202498803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 532,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202507142",
      "pull_request_review_id": 1439888882,
      "id": 1202507142,
      "node_id": "PRRC_kwDOEEET9c5HrM2G",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 411b1da4:\r\n\r\nThe `!parsed_command.empty()` is not needed. The dispatcher function already checks for emptiness.\r\nAlso, it's duplicated in both conditional branches.\r\n\r\nSame for the `parsed_command[0] == \"generate\"`. The code wouldn't reach this point if the command wouldn't be a `generate`. ",
      "created_at": "2023-05-23T15:05:42Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202507142",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202507142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202510683",
      "pull_request_review_id": 1439888882,
      "id": 1202510683,
      "node_id": "PRRC_kwDOEEET9c5HrNtb",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\n+            }\n+        }\n+        return true;\n+    } else {\n+        // Default to \"help generate\" when wrong number of parameters are given\n+        if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() > 3) {\n+            return executeConsoleHelpGenerate(parsed_command, wallet_model);\n+        } else {\n+            return false;\n+        }\n+    }\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only \"help generate\" command when requested, or when \"generate is called with wrong parameters.\n+    if ((parsed_command.size() >= 2 && parsed_command[0] == \"help\" && parsed_command[1] == \"generate\") || (parsed_command.size() > 3 && parsed_command[0] == \"generate\")) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 411b1da4:\r\n\r\nSimilar to the one above, The `parsed_command[0] == \"help\" && parsed_command[1] == \"generate\"` statement is not needed. The code wouldn't reach this point if the command wouldn't be a `help generate` command. ",
      "created_at": "2023-05-23T15:07:56Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202510683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202510683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202515027",
      "pull_request_review_id": 1439888882,
      "id": 1202515027,
      "node_id": "PRRC_kwDOEEET9c5HrOxT",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)",
      "path": "src/qt/rpcconsole.cpp",
      "position": 196,
      "original_position": 137,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In ad5642a:\r\n\r\nnit: instead of passing the wallet model pointer, could pass by reference. Always safer than passing pointers around.",
      "created_at": "2023-05-23T15:10:34Z",
      "updated_at": "2023-05-23T15:11:58Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1202515027",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1202515027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 577,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228605741",
      "pull_request_review_id": 1477911157,
      "id": 1228605741,
      "node_id": "PRRC_kwDOEEET9c5JOwkt",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+    if (parsed_command.empty()) {\n+        return false;\n+    } else {\n+        // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202498803,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree.",
      "created_at": "2023-06-13T19:33:50Z",
      "updated_at": "2023-06-13T19:54:02Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1228605741",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228605741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 532,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228606120",
      "pull_request_review_id": 1477911157,
      "id": 1228606120,
      "node_id": "PRRC_kwDOEEET9c5JOwqo",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)",
      "path": "src/qt/rpcconsole.cpp",
      "position": 196,
      "original_position": 137,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202515027,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree.",
      "created_at": "2023-06-13T19:34:21Z",
      "updated_at": "2023-06-13T19:54:03Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1228606120",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228606120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 577,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228620295",
      "pull_request_review_id": 1477911157,
      "id": 1228620295,
      "node_id": "PRRC_kwDOEEET9c5JO0IH",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": 1202507142,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree, I thought before that could be a pseudo-implementation of a handler pattern but the evaluation is being done checking the key of the map is being the specific command in the command-line.",
      "created_at": "2023-06-13T19:46:01Z",
      "updated_at": "2023-06-13T19:54:02Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1228620295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228620295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228627690",
      "pull_request_review_id": 1477911157,
      "id": 1228627690,
      "node_id": "PRRC_kwDOEEET9c5JO17q",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\n+            }\n+        }\n+        return true;\n+    } else {\n+        // Default to \"help generate\" when wrong number of parameters are given\n+        if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() > 3) {\n+            return executeConsoleHelpGenerate(parsed_command, wallet_model);\n+        } else {\n+            return false;\n+        }\n+    }\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only \"help generate\" command when requested, or when \"generate is called with wrong parameters.\n+    if ((parsed_command.size() >= 2 && parsed_command[0] == \"help\" && parsed_command[1] == \"generate\") || (parsed_command.size() > 3 && parsed_command[0] == \"generate\")) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": 1202510683,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would if -> Default to \"help generate\" when wrong number of parameters are given (line 524), but it's the same case anyway, it's the condition after the`or`operator,",
      "created_at": "2023-06-13T19:51:54Z",
      "updated_at": "2023-06-13T19:54:02Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1228627690",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1228627690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231238824",
      "pull_request_review_id": 1481953520,
      "id": 1231238824,
      "node_id": "PRRC_kwDOEEET9c5JYzao",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202477990,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-06-15T16:04:24Z",
      "updated_at": "2023-06-15T16:04:24Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231238824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231238824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 468,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231319519",
      "pull_request_review_id": 1482054836,
      "id": 1231319519,
      "node_id": "PRRC_kwDOEEET9c5JZHHf",
      "diff_hunk": "@@ -96,6 +96,16 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    static std::vector<std::string> parseHelper(const std::string& strCommand);\n+    static bool commandMatches(const std::vector<std::string>& parsed_command, const std::string& key);",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202468603,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done. Since the compilar doesn´t actually allow what you suggest, i removed the declarations from the class and implemented this 2 method as independent functions.",
      "created_at": "2023-06-15T17:05:00Z",
      "updated_at": "2023-06-15T17:05:01Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231319519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231319519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231342891",
      "pull_request_review_id": 1482091210,
      "id": 1231342891,
      "node_id": "PRRC_kwDOEEET9c5JZM0r",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202482937,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Modified",
      "created_at": "2023-06-15T17:29:56Z",
      "updated_at": "2023-06-15T17:29:56Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231342891",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231342891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231345709",
      "pull_request_review_id": 1482095444,
      "id": 1231345709,
      "node_id": "PRRC_kwDOEEET9c5JZNgt",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+    if (parsed_command.empty()) {\n+        return false;\n+    } else {\n+        // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 144,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202498803,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree ! Changed",
      "created_at": "2023-06-15T17:33:01Z",
      "updated_at": "2023-06-15T17:33:02Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231345709",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231345709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 532,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 536,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231361849",
      "pull_request_review_id": 1482120096,
      "id": 1231361849,
      "node_id": "PRRC_kwDOEEET9c5JZRc5",
      "diff_hunk": "@@ -464,6 +454,96 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> RPCExecutor::parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\\n\")};\n+    // Remove empty strings produced by consecutive separators\n+    auto should_remove{[](const std::string& str) { return str.empty(); }};\n+    vec.erase(std::remove_if(vec.begin(), vec.end(), should_remove), vec.end());\n+    return vec;\n+}\n+\n+/**\n+ * @brief Determines if the given parsed command matches the specified key.\n+ * @param parsed_command A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param key The key to match against.\n+ * @return True if the whole parsed_key vector matches the beginning of parsed_command vector, false otherwise.\n+ */\n+bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command, const std::string& key)\n+{\n+    const std::vector<std::string> parsed_key{parseHelper(key)};\n+\n+    // return true if the whole parsed_key vector matches the beginning of parsed_command\n+    // parsed_command should be the same size or longer than parsed_key because it might have parameters\n+    return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n+    if (!parsed_command.empty() && parsed_command[0] == \"help-console\") {\n+        Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                     QString(\"\\n\"\n+                             \"This console accepts RPC commands using the standard syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\\n\"\n+                             \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                             \"   example:    getblockhash(0)\\n\\n\"\n+                             \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                             \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                             \"   example:    getblockhash 0\\n\"\n+                             \"               getblockhash,0\\n\\n\"\n+                             \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                             \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                             \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+        return true;\n+    } else {\n+        return false;\n+    }\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)",
      "path": "src/qt/rpcconsole.cpp",
      "position": 196,
      "original_position": 137,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "ad5642ae91beb522b6ae806f28cb015a759d1d19",
      "in_reply_to_id": 1202515027,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I usually agree with you @furszy , but in this case I'm  just passing around a pointer i didn´t create but received from a chain of method calls that already use pointers. Also, the pointer will be needed further down the chain of calls by other methods. I prefer to not modify this and keep it this way, if you don't mind :slightly_smiling_face: ",
      "created_at": "2023-06-15T17:50:37Z",
      "updated_at": "2023-06-15T17:50:38Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231361849",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231361849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 577,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231687391",
      "pull_request_review_id": 1482595698,
      "id": 1231687391,
      "node_id": "PRRC_kwDOEEET9c5Jag7f",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": 1202507142,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed.",
      "created_at": "2023-06-16T01:35:44Z",
      "updated_at": "2023-06-16T01:35:44Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231687391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231687391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231688550",
      "pull_request_review_id": 1482596882,
      "id": 1231688550,
      "node_id": "PRRC_kwDOEEET9c5JahNm",
      "diff_hunk": "@@ -487,6 +491,69 @@ bool RPCExecutor::commandMatches(const std::vector<std::string>& parsed_command,\n     return parsed_key.size() <= parsed_command.size() && std::equal(parsed_key.begin(), parsed_key.end(), parsed_command.begin());\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\n+            }\n+        }\n+        return true;\n+    } else {\n+        // Default to \"help generate\" when wrong number of parameters are given\n+        if (!parsed_command.empty() && parsed_command[0] == \"generate\" && parsed_command.size() > 3) {\n+            return executeConsoleHelpGenerate(parsed_command, wallet_model);\n+        } else {\n+            return false;\n+        }\n+    }\n+}\n+\n+/**\n+ * @brief  Executes the console-only command \"help generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only \"help generate\" command when requested, or when \"generate is called with wrong parameters.\n+    if ((parsed_command.size() >= 2 && parsed_command[0] == \"help\" && parsed_command[1] == \"generate\") || (parsed_command.size() > 3 && parsed_command[0] == \"generate\")) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "411b1da407f78f2f973f90d48676ce1ae26734a7",
      "in_reply_to_id": 1202510683,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Modified.",
      "created_at": "2023-06-16T01:36:46Z",
      "updated_at": "2023-06-16T01:36:46Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1231688550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1231688550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1237708053",
      "pull_request_review_id": 1491894680,
      "id": 1237708053,
      "node_id": "PRRC_kwDOEEET9c5Jxe0V",
      "diff_hunk": "@@ -464,6 +485,58 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Reply with help text as-if a RPC reply.\n+    Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                 QString(\"\\n\"\n+                         \"This console accepts RPC commands using the standard syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\\n\"\n+                         \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                         \"   example:    getblockhash(0)\\n\\n\"\n+                         \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                         \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\"\n+                         \"               getblockhash,0\\n\\n\"\n+                         \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                         \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+    return true;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+\n+    if (parsed_command.empty()) return false;\n+\n+    // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key\n+    for (auto const& [key, method] : m_method_map) {\n+        if (commandMatches(parsed_command, key)) {\n+            return (this->*method)(parsed_command, wallet_model);\n+        }\n+    }",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 145,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "aa898d6a72643542c08f061086ec7eaeb9e16e78",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This loop over all entries breaks the purpose of using a map, could have been a set<pair<string, method>>.\r\n\r\nOr.. instead of the loop, could:\r\n```c++\r\nstd::string method = parsed_command[0];\r\nbool exec_help = false;\r\nif (method == \"help\") {\r\n    exec_help = true;\r\n    method = parsed_command[1];\r\n}\r\nauto it_method = m_method_map.find(method);\r\nif (it_method == m_method_map.end()) return false; // method not found\r\nreturn (*it_method.second)(parsed_command, wallet_model, exec_help);\r\n```",
      "created_at": "2023-06-21T21:16:48Z",
      "updated_at": "2023-07-03T14:31:48Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1237708053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1237708053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 530,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248842906",
      "pull_request_review_id": 1491894680,
      "id": 1248842906,
      "node_id": "PRRC_kwDOEEET9c5Kb9Sa",
      "diff_hunk": "@@ -96,8 +96,49 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    bool executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model);\n+    bool executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model);\n+    // std::map mapping strings to methods member of RPCExecutor class\n+    // Keys must be strings with commands and (optionally) parameters in \"canonical\" form (separated by single space)\n+    // Keys should match the beggining of user input commands (user commands can have more parameters than the key)\n+    std::map<std::string, bool (RPCExecutor::*)(const std::vector<std::string>&, const WalletModel*)> m_method_map{\n+        {\"help-console\", &RPCExecutor::executeConsoleHelpConsole}};\n };\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\")};",
      "path": "src/qt/rpcconsole.cpp",
      "position": 36,
      "original_position": 24,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "aa898d6a72643542c08f061086ec7eaeb9e16e78",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not really for this PR but this will not work with console-only commands that contain descriptors as they use `()` internally.",
      "created_at": "2023-07-01T13:35:14Z",
      "updated_at": "2023-07-03T14:31:14Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1248842906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248842906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": 119,
      "original_start_line": 116,
      "start_side": "RIGHT",
      "line": 122,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248843611",
      "pull_request_review_id": 1491894680,
      "id": 1248843611,
      "node_id": "PRRC_kwDOEEET9c5Kb9db",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: format:\r\n```suggestion\r\n                Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\r\n```",
      "created_at": "2023-07-01T13:40:28Z",
      "updated_at": "2023-07-03T14:31:14Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1248843611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248843611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248843898",
      "pull_request_review_id": 1491894680,
      "id": 1248843898,
      "node_id": "PRRC_kwDOEEET9c5Kb9h6",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: format:\r\n```suggestion\r\n                std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\r\n                Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));\r\n```",
      "created_at": "2023-07-01T13:41:39Z",
      "updated_at": "2023-07-03T14:31:14Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1248843898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248843898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 516,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248845934",
      "pull_request_review_id": 1491894680,
      "id": 1248845934,
      "node_id": "PRRC_kwDOEEET9c5Kb-Bu",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, strprintf(\"generatetoaddress %s %s %s\\n\", nblocks, address, maxtries), /*pstrFilteredOut=*/nullptr, wallet_model)) {\r\n```",
      "created_at": "2023-07-01T13:45:55Z",
      "updated_at": "2023-07-03T14:31:14Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1248845934",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248845934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248846569",
      "pull_request_review_id": 1491894680,
      "id": 1248846569,
      "node_id": "PRRC_kwDOEEET9c5Kb-Lp",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be good to lock this for test networks only so users don't end up generating addresses for no reason.",
      "created_at": "2023-07-01T13:49:28Z",
      "updated_at": "2023-07-03T14:32:18Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1248846569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1248846569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 498,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1307830349",
      "pull_request_review_id": 1598935537,
      "id": 1307830349,
      "node_id": "PRRC_kwDOEEET9c5N8-hN",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));\n+            } else {\n+                    std::string answer = \"{\\n  \\\"address\\\": \\\"\" + address + \"\\\",\\n  \\\"blocks\\\": \" + result + \"\\n}\";\n+                    Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(\"\\n\" + answer + \"\\n\\n\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": 1248843898,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Modified",
      "created_at": "2023-08-28T19:40:31Z",
      "updated_at": "2023-08-28T19:40:31Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1307830349",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1307830349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 516,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1307832626",
      "pull_request_review_id": 1598938858,
      "id": 1307832626,
      "node_id": "PRRC_kwDOEEET9c5N8_Ey",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .\n+    if (parsed_command.size() <= 3) {\n+        // Default number of blocks is 1 if missing\n+        const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+        // An empty maxtries parameters will be modified by generatetoaddress' default value\n+        const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"\"};\n+\n+        // Generate address\n+        std::string result;\n+        std::string address;\n+        if (!RPCConsole::RPCExecuteCommandLine(m_node, address, \"getnewaddress\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate new address\"));\n+        } else {\n+            if (!RPCConsole::RPCExecuteCommandLine(m_node, result, \"generatetoaddress \" + nblocks + \" \" + address + \" \" + maxtries + \"\\n\", /*pstrFilteredOut=*/nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: could not generate blocks\"));",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": 1248843611,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Modified ",
      "created_at": "2023-08-28T19:41:36Z",
      "updated_at": "2023-08-28T19:41:37Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1307832626",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1307832626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1308093785",
      "pull_request_review_id": 1599321793,
      "id": 1308093785,
      "node_id": "PRRC_kwDOEEET9c5N9-1Z",
      "diff_hunk": "@@ -485,6 +489,60 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1db3da2f8b30221f0a94b5881577e2704c1e6da7",
      "in_reply_to_id": 1248846569,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-08-29T01:09:40Z",
      "updated_at": "2023-08-29T01:09:41Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1308093785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1308093785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 498,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1315205812",
      "pull_request_review_id": 1609964069,
      "id": 1315205812,
      "node_id": "PRRC_kwDOEEET9c5OZHK0",
      "diff_hunk": "@@ -96,8 +96,49 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    bool executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model);\n+    bool executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model);\n+    // std::map mapping strings to methods member of RPCExecutor class\n+    // Keys must be strings with commands and (optionally) parameters in \"canonical\" form (separated by single space)\n+    // Keys should match the beggining of user input commands (user commands can have more parameters than the key)\n+    std::map<std::string, bool (RPCExecutor::*)(const std::vector<std::string>&, const WalletModel*)> m_method_map{\n+        {\"help-console\", &RPCExecutor::executeConsoleHelpConsole}};\n };\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.\n+ * Splits a command line string into a vector with command at position 0, and parameters after\n+ *\n+ * @param[in]    strCommand  Command line to parse\n+ *\n+ * @return a vector of strings with command and parameters\n+ */\n+std::vector<std::string> parseHelper(const std::string& strCommand)\n+{\n+    // Split while recognizing the several characters that can be used as separators in the GUI console\n+    std::vector<std::string> vec{SplitString(strCommand, \" (),\")};",
      "path": "src/qt/rpcconsole.cpp",
      "position": 36,
      "original_position": 24,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "aa898d6a72643542c08f061086ec7eaeb9e16e78",
      "in_reply_to_id": 1248842906,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, agree. This will have to be refactored if such thing is ever needed.",
      "created_at": "2023-09-04T21:28:43Z",
      "updated_at": "2023-09-04T21:28:44Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1315205812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1315205812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": 119,
      "original_start_line": 116,
      "start_side": "RIGHT",
      "line": 122,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1315337783",
      "pull_request_review_id": 1610158949,
      "id": 1315337783,
      "node_id": "PRRC_kwDOEEET9c5OZnY3",
      "diff_hunk": "@@ -464,6 +485,58 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model)\n+{\n+    // Reply with help text as-if a RPC reply.\n+    Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                 QString(\"\\n\"\n+                         \"This console accepts RPC commands using the standard syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\\n\"\n+                         \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                         \"   example:    getblockhash(0)\\n\\n\"\n+                         \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                         \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\"\n+                         \"               getblockhash,0\\n\\n\"\n+                         \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                         \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+    return true;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed\n+ *\n+ * @param[in]    command  Command line to execute\n+ * @param[in]    wallet_model  Wallet model to use\n+ * @return  true if command was handled by this method (even on errors), false otherwise\n+ *\n+ */\n+bool RPCExecutor::executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model)\n+{\n+    // Parse command line into a vector of strings\n+    const std::vector<std::string> parsed_command{parseHelper(command)};\n+\n+    if (parsed_command.empty()) return false;\n+\n+    // Iterate over m_method_map and execute the associated method if the beggining of parsed_command matches the key\n+    for (auto const& [key, method] : m_method_map) {\n+        if (commandMatches(parsed_command, key)) {\n+            return (this->*method)(parsed_command, wallet_model);\n+        }\n+    }",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 145,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "aa898d6a72643542c08f061086ec7eaeb9e16e78",
      "in_reply_to_id": 1237708053,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Implemented",
      "created_at": "2023-09-05T04:02:25Z",
      "updated_at": "2023-09-05T04:02:25Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1315337783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1315337783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 530,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1368146688",
      "pull_request_review_id": 1691733027,
      "id": 1368146688,
      "node_id": "PRRC_kwDOEEET9c5RjEMA",
      "diff_hunk": "@@ -468,6 +471,73 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Initialize default parameters if missing\n+    const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+    const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"1000000\"};\n+\n+    // Handle some special cases...\n+    // Default to console help generate if more than 3 parameters or if \"help generate\" was called\n+    if (parsed_command.size() > 3 || exec_help) {\n+        executeConsoleHelpGenerate();\n+        return true;\n+    }\n+    // Fail if we are on mainnet, to avoid generating addresses for blocks that will not be generated\n+    if (Params().GetChainType() == ChainType::MAIN) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": 113,
      "original_position": 48,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "e6e0dacc92953f1a190a18bf64d18fd7572354d7",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Better to fail on all networks except regtest. It might be possible to mine on a custom signet too, but anyone who knows how to make such a network also knows how to use the RPC.",
      "created_at": "2023-10-23T05:30:00Z",
      "updated_at": "2023-10-23T05:30:33Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1368146688",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1368146688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 494,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1445448364",
      "pull_request_review_id": 1810165502,
      "id": 1445448364,
      "node_id": "PRRC_kwDOEEET9c5WJ8qs",
      "diff_hunk": "@@ -468,6 +471,73 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Initialize default parameters if missing\n+    const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+    const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"1000000\"};\n+\n+    // Handle some special cases...\n+    // Default to console help generate if more than 3 parameters or if \"help generate\" was called\n+    if (parsed_command.size() > 3 || exec_help) {\n+        executeConsoleHelpGenerate();\n+        return true;\n+    }\n+    // Fail if we are on mainnet, to avoid generating addresses for blocks that will not be generated\n+    if (Params().GetChainType() == ChainType::MAIN) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": 113,
      "original_position": 48,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "e6e0dacc92953f1a190a18bf64d18fd7572354d7",
      "in_reply_to_id": 1368146688,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree, I'll change it soon",
      "created_at": "2024-01-08T22:55:59Z",
      "updated_at": "2024-01-08T22:55:59Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1445448364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1445448364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 494,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1472227098",
      "pull_request_review_id": 1852779591,
      "id": 1472227098,
      "node_id": "PRRC_kwDOEEET9c5XwGca",
      "diff_hunk": "@@ -469,6 +472,73 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Initialize default parameters if missing\n+    const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+    const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"1000000\"};\n+\n+    // Handle some special cases...\n+    // Default to console help generate if more than 3 parameters or if \"help generate\" was called\n+    if (parsed_command.size() > 3 || exec_help) {\n+        executeConsoleHelpGenerate();\n+        return true;\n+    }\n+    // Fail if we are on mainnet, to avoid generating addresses for blocks that will not be generated\n+    if (Params().GetChainType() == ChainType::MAIN) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": 48,
      "original_position": 48,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should pass through the model.",
      "created_at": "2024-01-31T02:19:37Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1472227098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1472227098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 494,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473018733",
      "pull_request_review_id": 1852779591,
      "id": 1473018733,
      "node_id": "PRRC_kwDOEEET9c5XzHtt",
      "diff_hunk": "@@ -96,8 +96,33 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    bool executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help = false);\n+    bool executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model);\n+    // std::map mapping strings to methods member of RPCExecutor class\n+    // Keys must be strings with commands and (optionally) parameters in \"canonical\" form (separated by single space)\n+    // Keys should match the beggining of user input commands (user commands can have more parameters than the key)\n+    std::map<std::string, bool (RPCExecutor::*)(const std::vector<std::string>&, const WalletModel*, const bool)> m_method_map{\n+        {\"help-console\", &RPCExecutor::executeConsoleHelpConsole}};\n };\n \n+/**\n+ * Small and fast parser supporting console command syntax, with limited functionality.",
      "path": "src/qt/rpcconsole.cpp",
      "position": 26,
      "original_position": 14,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The function iterates over the entire input command string twice. It isn't really \"fast\".\r\nCould remove this line altogether.",
      "created_at": "2024-01-31T15:25:40Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473018733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473018733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473029584",
      "pull_request_review_id": 1852779591,
      "id": 1473029584,
      "node_id": "PRRC_kwDOEEET9c5XzKXQ",
      "diff_hunk": "@@ -415,35 +440,15 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n         std::string result;\n         std::string executableCommand = command.toStdString() + \"\\n\";\n \n-        // Catch the console-only-help command before RPC call is executed and reply with help text as-if a RPC reply.\n-        if(executableCommand == \"help-console\\n\") {\n-            Q_EMIT reply(RPCConsole::CMD_REPLY, QString((\"\\n\"\n-                \"This console accepts RPC commands using the standard syntax.\\n\"\n-                \"   example:    getblockhash 0\\n\\n\"\n-\n-                \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n-                \"   example:    getblockhash(0)\\n\\n\"\n-\n-                \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n-\n-                \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n-                \"   example:    getblockhash 0\\n\"\n-                \"               getblockhash,0\\n\\n\"\n-\n-                \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n-\n-                \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n-                \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\")));\n-            return;\n-        }\n-        if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\n-            Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n-            return;\n+        // Attempt to execute console-only commands\n+        if (!RPCExecutor::executeConsoleOnlyCommand(command.toStdString(), wallet_model)) {\n+                // Send to the RPC command parser if not console-only\n+                if (!RPCConsole::RPCExecuteCommandLine(m_node, result, executableCommand, nullptr, wallet_model)) {\n+                    Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Parse error: unbalanced ' or \\\"\"));\n+                    return;\n+                }\n+                Q_EMIT reply(RPCConsole::CMD_REPLY, QString::fromStdString(result));",
      "path": "src/qt/rpcconsole.cpp",
      "position": 83,
      "original_position": 71,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is an indentation issue here.\r\n\r\n",
      "created_at": "2024-01-31T15:31:18Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473029584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473029584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": 447,
      "original_start_line": 444,
      "start_side": "RIGHT",
      "line": 453,
      "original_line": 450,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473035544",
      "pull_request_review_id": 1852779591,
      "id": 1473035544,
      "node_id": "PRRC_kwDOEEET9c5XzL0Y",
      "diff_hunk": "@@ -464,6 +469,59 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief  Executes the console-only command \"help-console\".\n+ * @param  parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return  True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Reply with help text as-if a RPC reply.\n+    Q_EMIT reply(RPCConsole::CMD_REPLY,\n+                 QString(\"\\n\"\n+                         \"This console accepts RPC commands using the standard syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\\n\"\n+                         \"This console can also accept RPC commands using the parenthesized syntax.\\n\"\n+                         \"   example:    getblockhash(0)\\n\\n\"\n+                         \"Commands may be nested when specified with the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)\\n\\n\"\n+                         \"A space or a comma can be used to delimit arguments for either syntax.\\n\"\n+                         \"   example:    getblockhash 0\\n\"\n+                         \"               getblockhash,0\\n\\n\"\n+                         \"Named results can be queried with a non-quoted key string in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0) 1)[tx]\\n\\n\"\n+                         \"Results without keys can be queried with an integer in brackets using the parenthesized syntax.\\n\"\n+                         \"   example:    getblock(getblockhash(0),1)[tx][0]\\n\\n\"));\n+    return true;\n+}\n+\n+/**\n+ * Catches console-only command before a RPC call is executed",
      "path": "src/qt/rpcconsole.cpp",
      "position": 189,
      "original_position": 110,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This shouldn't be here. The function's docstrings shouldn't explain the caller workflow behavior.\r\nSomething like \"Executes gui-console-only commands\" would be preferable.",
      "created_at": "2024-01-31T15:35:33Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473035544",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473035544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 570,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473052359",
      "pull_request_review_id": 1852779591,
      "id": 1473052359,
      "node_id": "PRRC_kwDOEEET9c5XzP7H",
      "diff_hunk": "@@ -468,6 +471,73 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Initialize default parameters if missing\n+    const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+    const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"1000000\"};\n+\n+    // Handle some special cases...\n+    // Default to console help generate if more than 3 parameters or if \"help generate\" was called\n+    if (parsed_command.size() > 3 || exec_help) {\n+        executeConsoleHelpGenerate();\n+        return true;\n+    }\n+    // Fail if we are on mainnet, to avoid generating addresses for blocks that will not be generated\n+    if (Params().GetChainType() == ChainType::MAIN) {",
      "path": "src/qt/rpcconsole.cpp",
      "position": 113,
      "original_position": 48,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "e6e0dacc92953f1a190a18bf64d18fd7572354d7",
      "in_reply_to_id": 1368146688,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To access the chain type, use the node interface. See [03d67301e081ecf3123372901b115ee5e29d7c79](https://github.com/furszy/bitcoin-core/commit/03d67301e081ecf3123372901b115ee5e29d7c79). So we don't violate the layers division.",
      "created_at": "2024-01-31T15:46:58Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473052359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473052359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 494,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473055299",
      "pull_request_review_id": 1852779591,
      "id": 1473055299,
      "node_id": "PRRC_kwDOEEET9c5XzQpD",
      "diff_hunk": "@@ -469,6 +472,73 @@ void RPCExecutor::request(const QString &command, const WalletModel* wallet_mode\n     }\n }\n \n+/**\n+ * @brief Executes the console-only command \"generate\".\n+ * @param parsed_command  A vector of strings with command and parameters, usually generated by RPCExecutor::parseHelper\n+ * @param wallet_model  WalletModel to use for the command\n+ * @return True if the command was executed, false otherwise.\n+ */\n+bool RPCExecutor::executeConsoleGenerate(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help)\n+{\n+    // Initialize default parameters if missing\n+    const std::string nblocks{parsed_command.size() > 1 ? parsed_command[1] : \"1\"};\n+    const std::string maxtries{parsed_command.size() > 2 ? parsed_command[2] : \"1000000\"};\n+\n+    // Handle some special cases...\n+    // Default to console help generate if more than 3 parameters or if \"help generate\" was called\n+    if (parsed_command.size() > 3 || exec_help) {\n+        executeConsoleHelpGenerate();\n+        return true;\n+    }\n+    // Fail if we are on mainnet, to avoid generating addresses for blocks that will not be generated\n+    if (Params().GetChainType() == ChainType::MAIN) {\n+        Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: generate is not available on mainnet\"));\n+        return true;\n+    }\n+    // Fail if parameters are not positive integers\n+    const auto nblocks_value{ToIntegral<int>(nblocks)};\n+    const auto maxtries_value{ToIntegral<int>(maxtries)};\n+    if (!nblocks_value || !maxtries_value || nblocks_value.value() <= 0 || maxtries_value.value() <= 0) {\n+        Q_EMIT reply(RPCConsole::CMD_ERROR, QString(\"Error: parameters must be positive integers\"));\n+        return true;\n+    }\n+\n+    // Catch the console-only generate command with 2 or less parameters before RPC call is executed .",
      "path": "src/qt/rpcconsole.cpp",
      "position": 60,
      "original_position": 60,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same as above, this shouldn't be here. It is explaining the caller's workflow inside `executeConsoleGenerate`. There is no other RPC calls at this point.",
      "created_at": "2024-01-31T15:49:00Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473055299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473055299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 506,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473064260",
      "pull_request_review_id": 1852779591,
      "id": 1473064260,
      "node_id": "PRRC_kwDOEEET9c5XzS1E",
      "diff_hunk": "@@ -96,8 +96,33 @@ public Q_SLOTS:\n \n private:\n     interfaces::Node& m_node;\n+    bool executeConsoleHelpConsole(const std::vector<std::string>& parsed_command, const WalletModel* wallet_model, const bool exec_help = false);\n+    bool executeConsoleOnlyCommand(const std::string& command, const WalletModel* wallet_model);\n+    // std::map mapping strings to methods member of RPCExecutor class\n+    // Keys must be strings with commands and (optionally) parameters in \"canonical\" form (separated by single space)\n+    // Keys should match the beggining of user input commands (user commands can have more parameters than the key)\n+    std::map<std::string, bool (RPCExecutor::*)(const std::vector<std::string>&, const WalletModel*, const bool)> m_method_map{\n+        {\"help-console\", &RPCExecutor::executeConsoleHelpConsole}};",
      "path": "src/qt/rpcconsole.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2c9974742d204fc1455688b981b31d06983cb8c7",
      "original_commit_id": "1bf0c075c7b8a88c8977b49b72a61faf53003040",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In case you retouch this; these functions should return a `util::Result<QString>` instead of a boolean. This way, the returned string can be emitted at the caller side (same as it is done for the RPC commands). This will improve the existing structure that has all functions returning true on all code paths.",
      "created_at": "2024-01-31T15:55:17Z",
      "updated_at": "2024-01-31T16:00:49Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/692#discussion_r1473064260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/1473064260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/692"
        }
      },
      "start_line": null,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    }
  ]
}