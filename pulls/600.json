{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600",
    "id": 941949096,
    "node_id": "PR_kwDOEEET9c44JQCo",
    "html_url": "https://github.com/bitcoin-core/gui/pull/600",
    "diff_url": "https://github.com/bitcoin-core/gui/pull/600.diff",
    "patch_url": "https://github.com/bitcoin-core/gui/pull/600.patch",
    "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/600",
    "commits_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/600/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin-core/gui/statuses/a63b60f02bf7987d0a430496abe524de94f3c8cb",
    "number": 600,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "refactor: Add OptionsModel getOption/setOption methods",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a trivial change which is needed as part of #602 to get bitcoind and bitcoin-qt to use the same settings instead of different settings. It is split off from #602 because it causes a lot of rebase conflicts (any time there is a GUI options change).\r\n\r\nThis PR is very small and easy to review ignoring whitespace: https://github.com/bitcoin-core/gui/pull/600/files?w=1",
    "labels": [
      {
        "id": 2145503632,
        "node_id": "MDU6TGFiZWwyMTQ1NTAzNjMy",
        "url": "https://api.github.com/repos/bitcoin-core/gui/labels/Refactoring",
        "name": "Refactoring",
        "description": "",
        "color": "ffc6ec",
        "default": false
      }
    ],
    "created_at": "2022-05-19T19:45:08Z",
    "updated_at": "2023-05-22T10:02:49Z",
    "closed_at": "2022-05-22T18:12:56Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-05-22T18:12:56Z",
    "merge_commit_sha": "b0e16eb3ac93a8f92e4a9eb7574e539cb5da2335",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/qtopt",
      "ref": "pr/qtopt",
      "sha": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 280158297,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODAxNTgyOTc=",
        "name": "gui",
        "full_name": "ryanofsky/gui",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/gui",
        "description": "Bitcoin Core GUI staging repository",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/gui",
        "archive_url": "https://api.github.com/repos/ryanofsky/gui/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/gui/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/gui/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/gui/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/gui/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/gui/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/gui/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/gui/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/gui/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/gui/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/gui/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/gui/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/gui/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/gui/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/gui/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/gui/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/gui/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/gui.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/gui/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/gui/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/gui/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/gui/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/gui/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/gui/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/gui/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/gui/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/gui/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/gui/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/gui/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/gui.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/gui/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/gui/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/gui/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/gui/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/gui/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/gui/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/gui/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/gui.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/gui/hooks",
        "svn_url": "https://github.com/ryanofsky/gui",
        "homepage": "https://github.com/bitcoin/bitcoin",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 135528,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2022-09-21T16:17:37Z",
        "created_at": "2020-07-16T13:15:24Z",
        "updated_at": "2021-06-15T08:55:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin-core:master",
      "ref": "master",
      "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
      "user": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 272700405,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNzI3MDA0MDU=",
        "name": "gui",
        "full_name": "bitcoin-core/gui",
        "owner": {
          "login": "bitcoin-core",
          "id": 13464320,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
          "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin-core",
          "html_url": "https://github.com/bitcoin-core",
          "followers_url": "https://api.github.com/users/bitcoin-core/followers",
          "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
          "repos_url": "https://api.github.com/users/bitcoin-core/repos",
          "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin-core/gui",
        "description": "Bitcoin Core GUI staging repository",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin-core/gui",
        "archive_url": "https://api.github.com/repos/bitcoin-core/gui/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin-core/gui/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin-core/gui/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin-core/gui/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin-core/gui/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin-core/gui/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin-core/gui/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin-core/gui/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin-core/gui/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin-core/gui/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin-core/gui/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin-core/gui/downloads",
        "events_url": "https://api.github.com/repos/bitcoin-core/gui/events",
        "forks_url": "https://api.github.com/repos/bitcoin-core/gui/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin-core/gui/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin-core/gui/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin-core/gui/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin-core/gui.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin-core/gui/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin-core/gui/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin-core/gui/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin-core/gui/languages",
        "merges_url": "https://api.github.com/repos/bitcoin-core/gui/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin-core/gui/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin-core/gui/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin-core/gui/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin-core/gui/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin-core/gui.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin-core/gui/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin-core/gui/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin-core/gui/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin-core/gui/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin-core/gui/tags",
        "teams_url": "https://api.github.com/repos/bitcoin-core/gui/teams",
        "trees_url": "https://api.github.com/repos/bitcoin-core/gui/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin-core/gui.git",
        "hooks_url": "https://api.github.com/repos/bitcoin-core/gui/hooks",
        "svn_url": "https://github.com/bitcoin-core/gui",
        "homepage": "https://github.com/bitcoin/bitcoin",
        "language": "C++",
        "forks_count": 271,
        "stargazers_count": 491,
        "watchers_count": 491,
        "size": 149681,
        "default_branch": "master",
        "open_issues_count": 155,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-01T15:59:41Z",
        "created_at": "2020-06-16T12:20:07Z",
        "updated_at": "2023-08-02T07:56:25Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 241,
    "deletions": 227,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 3,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOEEET9doAKGE2M2I2MGYwMmJmNzk4N2QwYTQzMDQ5NmFiZTUyNGRlOTRmM2M4Y2I",
      "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin-core/gui/commit/a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "tree": {
        "sha": "722fb8fb6afa94cd44e34c07786ccaf1beccada0",
        "url": "https://api.github.com/repos/bitcoin-core/gui/git/trees/722fb8fb6afa94cd44e34c07786ccaf1beccada0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin-core/gui/git/commits/0de36941eca1bff91420dd878eb097db2b1a596c",
          "sha": "0de36941eca1bff91420dd878eb097db2b1a596c",
          "html_url": "https://github.com/bitcoin-core/gui/commit/0de36941eca1bff91420dd878eb097db2b1a596c"
        }
      ],
      "message": "refactor: Add OptionsModel getOption/setOption methods\n\nEasiest to review ignoring whitespace.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2022-05-19T15:32:56Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2019-04-29T19:29:00Z"
      },
      "sha": "a63b60f02bf7987d0a430496abe524de94f3c8cb"
    },
    {
      "event": "commented",
      "id": 1132645464,
      "node_id": "IC_kwDOEEET9c5DgsxY",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/comments/1132645464",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T08:47:04Z",
      "updated_at": "2022-05-20T08:47:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#497](https://github.com/bitcoin-core/gui/pull/497) (Enable users to configure their monospace font specifically by luke-jr)\n* [#440](https://github.com/bitcoin-core/gui/pull/440) (Do not require restart if overridden option is modified by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#issuecomment-1132645464",
      "issue_url": "https://api.github.com/repos/bitcoin-core/gui/issues/600"
    },
    {
      "event": "labeled",
      "id": 6649335435,
      "node_id": "LE_lADOEEET9c5KCydrzwAAAAGMVM6L",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/6649335435",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T10:00:44Z",
      "label": {
        "name": "Refactoring",
        "color": "ffc6ec"
      }
    },
    {
      "event": "reviewed",
      "id": 980013445,
      "node_id": "PRR_kwDOEEET9c46adGF",
      "url": null,
      "actor": null,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#pullrequestreview-980013445",
      "submitted_at": "2022-05-20T12:12:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
    },
    {
      "event": "reviewed",
      "id": 980168214,
      "node_id": "PRR_kwDOEEET9c46bC4W",
      "url": null,
      "actor": null,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK a63b60f0",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#pullrequestreview-980168214",
      "submitted_at": "2022-05-20T14:03:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
    },
    {
      "event": "reviewed",
      "id": 980817294,
      "node_id": "PRR_kwDOEEET9c46dhWO",
      "url": null,
      "actor": null,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK a63b60f02bf7987d0a430496abe524de94f3c8cb.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#pullrequestreview-980817294",
      "submitted_at": "2022-05-21T10:58:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
    },
    {
      "event": "merged",
      "id": 6656477635,
      "node_id": "ME_lADOEEET9c5KCydrzwAAAAGMwcnD",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/6656477635",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b0e16eb3ac93a8f92e4a9eb7574e539cb5da2335",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/b0e16eb3ac93a8f92e4a9eb7574e539cb5da2335",
      "created_at": "2022-05-22T18:12:56Z"
    },
    {
      "event": "closed",
      "id": 6656477637,
      "node_id": "CE_lADOEEET9c5KCydrzwAAAAGMwcnF",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/6656477637",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-22T18:12:57Z"
    },
    {
      "event": "reviewed",
      "id": 981026829,
      "node_id": "PRR_kwDOEEET9c46eUgN",
      "url": null,
      "actor": null,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "post merge ACK https://github.com/bitcoin-core/gui/commit/a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "user": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#pullrequestreview-981026829",
      "submitted_at": "2022-05-22T23:00:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
    },
    {
      "event": "referenced",
      "id": 6697616853,
      "node_id": "REFE_lADOEEET9c5KCydrzwAAAAGPNYXV",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/6697616853",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "149fa6e889a6443a63b3eaf27990cf80f34f6d4b",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/149fa6e889a6443a63b3eaf27990cf80f34f6d4b",
      "created_at": "2022-05-28T22:51:02Z"
    },
    {
      "event": "locked",
      "id": 9300688726,
      "node_id": "LOE_lADOEEET9c5KCydrzwAAAAIqXT9W",
      "url": "https://api.github.com/repos/bitcoin-core/gui/issues/events/9300688726",
      "actor": {
        "login": "bitcoin-core",
        "id": 13464320,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDY0MzIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13464320?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin-core",
        "html_url": "https://github.com/bitcoin-core",
        "followers_url": "https://api.github.com/users/bitcoin-core/followers",
        "following_url": "https://api.github.com/users/bitcoin-core/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin-core/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin-core/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin-core/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin-core/orgs",
        "repos_url": "https://api.github.com/users/bitcoin-core/repos",
        "events_url": "https://api.github.com/users/bitcoin-core/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin-core/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T10:02:49Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878181779",
      "pull_request_review_id": 980168214,
      "id": 878181779,
      "node_id": "PRRC_kwDOEEET9c40V_2T",
      "diff_hunk": "@@ -335,260 +335,272 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n     if(role == Qt::EditRole)\n     {\n-        QSettings settings;\n-        switch(index.row())\n-        {\n-        case StartAtStartup:\n-            return GUIUtil::GetStartOnSystemStartup();\n-        case ShowTrayIcon:\n-            return m_show_tray_icon;\n-        case MinimizeToTray:\n-            return fMinimizeToTray;\n-        case MapPortUPnP:\n+        return getOption(OptionID(index.row()));\n+    }\n+    return QVariant();\n+}\n+\n+// write QSettings values\n+bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n+{\n+    bool successful = true; /* set to false on parse error */\n+    if(role == Qt::EditRole)\n+    {\n+        successful = setOption(OptionID(index.row()), value);\n+    }\n+\n+    Q_EMIT dataChanged(index, index);",
      "path": "src/qt/optionsmodel.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "original_commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not for this PR but we actually don't need to call `dataChanged` if nothing changed inside `setOption` (which can happen if the new value is the same as the stored one or if something bad happened internally, like a bad parsing or a impossibility to store the new value).",
      "created_at": "2022-05-20T14:02:47Z",
      "updated_at": "2022-05-20T14:03:08Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#discussion_r878181779",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878181779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 352,
      "original_line": 352,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878682156",
      "pull_request_review_id": 980817294,
      "id": 878682156,
      "node_id": "PRRC_kwDOEEET9c40X6As",
      "diff_hunk": "@@ -335,260 +335,272 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n     if(role == Qt::EditRole)\n     {\n-        QSettings settings;\n-        switch(index.row())\n-        {\n-        case StartAtStartup:\n-            return GUIUtil::GetStartOnSystemStartup();\n-        case ShowTrayIcon:\n-            return m_show_tray_icon;\n-        case MinimizeToTray:\n-            return fMinimizeToTray;\n-        case MapPortUPnP:\n+        return getOption(OptionID(index.row()));\n+    }\n+    return QVariant();\n+}\n+\n+// write QSettings values\n+bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n+{\n+    bool successful = true; /* set to false on parse error */\n+    if(role == Qt::EditRole)\n+    {\n+        successful = setOption(OptionID(index.row()), value);\n+    }\n+\n+    Q_EMIT dataChanged(index, index);\n+\n+    return successful;\n+}\n+\n+QVariant OptionsModel::getOption(OptionID option) const\n+{\n+    QSettings settings;\n+    switch (option) {\n+    case StartAtStartup:\n+        return GUIUtil::GetStartOnSystemStartup();\n+    case ShowTrayIcon:\n+        return m_show_tray_icon;\n+    case MinimizeToTray:\n+        return fMinimizeToTray;\n+    case MapPortUPnP:\n #ifdef USE_UPNP\n-            return settings.value(\"fUseUPnP\");\n+        return settings.value(\"fUseUPnP\");\n #else\n-            return false;\n+        return false;\n #endif // USE_UPNP\n-        case MapPortNatpmp:\n+    case MapPortNatpmp:\n #ifdef USE_NATPMP\n-            return settings.value(\"fUseNatpmp\");\n+        return settings.value(\"fUseNatpmp\");\n #else\n-            return false;\n+        return false;\n #endif // USE_NATPMP\n-        case MinimizeOnClose:\n-            return fMinimizeOnClose;\n-\n-        // default proxy\n-        case ProxyUse:\n-            return settings.value(\"fUseProxy\", false);\n-        case ProxyIP:\n-            return GetProxySetting(settings, \"addrProxy\").ip;\n-        case ProxyPort:\n-            return GetProxySetting(settings, \"addrProxy\").port;\n-\n-        // separate Tor proxy\n-        case ProxyUseTor:\n-            return settings.value(\"fUseSeparateProxyTor\", false);\n-        case ProxyIPTor:\n-            return GetProxySetting(settings, \"addrSeparateProxyTor\").ip;\n-        case ProxyPortTor:\n-            return GetProxySetting(settings, \"addrSeparateProxyTor\").port;\n+    case MinimizeOnClose:\n+        return fMinimizeOnClose;\n+\n+    // default proxy\n+    case ProxyUse:\n+        return settings.value(\"fUseProxy\", false);\n+    case ProxyIP:\n+        return GetProxySetting(settings, \"addrProxy\").ip;\n+    case ProxyPort:\n+        return GetProxySetting(settings, \"addrProxy\").port;\n+\n+    // separate Tor proxy\n+    case ProxyUseTor:\n+        return settings.value(\"fUseSeparateProxyTor\", false);\n+    case ProxyIPTor:\n+        return GetProxySetting(settings, \"addrSeparateProxyTor\").ip;\n+    case ProxyPortTor:\n+        return GetProxySetting(settings, \"addrSeparateProxyTor\").port;\n \n #ifdef ENABLE_WALLET\n-        case SpendZeroConfChange:\n-            return settings.value(\"bSpendZeroConfChange\");\n-        case ExternalSignerPath:\n-            return settings.value(\"external_signer_path\");\n-        case SubFeeFromAmount:\n-            return m_sub_fee_from_amount;\n+    case SpendZeroConfChange:\n+        return settings.value(\"bSpendZeroConfChange\");\n+    case ExternalSignerPath:\n+        return settings.value(\"external_signer_path\");\n+    case SubFeeFromAmount:\n+        return m_sub_fee_from_amount;\n #endif\n-        case DisplayUnit:\n-            return QVariant::fromValue(m_display_bitcoin_unit);\n-        case ThirdPartyTxUrls:\n-            return strThirdPartyTxUrls;\n-        case Language:\n-            return settings.value(\"language\");\n-        case UseEmbeddedMonospacedFont:\n-            return m_use_embedded_monospaced_font;\n-        case CoinControlFeatures:\n-            return fCoinControlFeatures;\n-        case EnablePSBTControls:\n-            return settings.value(\"enable_psbt_controls\");\n-        case Prune:\n-            return settings.value(\"bPrune\");\n-        case PruneSize:\n-            return settings.value(\"nPruneSize\");\n-        case DatabaseCache:\n-            return settings.value(\"nDatabaseCache\");\n-        case ThreadsScriptVerif:\n-            return settings.value(\"nThreadsScriptVerif\");\n-        case Listen:\n-            return settings.value(\"fListen\");\n-        case Server:\n-            return settings.value(\"server\");\n-        default:\n-            return QVariant();\n-        }\n+    case DisplayUnit:\n+        return QVariant::fromValue(m_display_bitcoin_unit);\n+    case ThirdPartyTxUrls:\n+        return strThirdPartyTxUrls;\n+    case Language:\n+        return settings.value(\"language\");\n+    case UseEmbeddedMonospacedFont:\n+        return m_use_embedded_monospaced_font;\n+    case CoinControlFeatures:\n+        return fCoinControlFeatures;\n+    case EnablePSBTControls:\n+        return settings.value(\"enable_psbt_controls\");\n+    case Prune:\n+        return settings.value(\"bPrune\");\n+    case PruneSize:\n+        return settings.value(\"nPruneSize\");\n+    case DatabaseCache:\n+        return settings.value(\"nDatabaseCache\");\n+    case ThreadsScriptVerif:\n+        return settings.value(\"nThreadsScriptVerif\");\n+    case Listen:\n+        return settings.value(\"fListen\");\n+    case Server:\n+        return settings.value(\"server\");\n+    default:\n+        return QVariant();\n     }\n-    return QVariant();\n }\n \n-// write QSettings values\n-bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n+bool OptionsModel::setOption(OptionID option, const QVariant& value)\n {\n     bool successful = true; /* set to false on parse error */\n-    if(role == Qt::EditRole)\n-    {\n-        QSettings settings;\n-        switch(index.row())\n-        {\n-        case StartAtStartup:\n-            successful = GUIUtil::SetStartOnSystemStartup(value.toBool());\n-            break;\n-        case ShowTrayIcon:\n-            m_show_tray_icon = value.toBool();\n-            settings.setValue(\"fHideTrayIcon\", !m_show_tray_icon);\n-            Q_EMIT showTrayIconChanged(m_show_tray_icon);\n-            break;\n-        case MinimizeToTray:\n-            fMinimizeToTray = value.toBool();\n-            settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n-            break;\n-        case MapPortUPnP: // core option - can be changed on-the-fly\n-            settings.setValue(\"fUseUPnP\", value.toBool());\n-            break;\n-        case MapPortNatpmp: // core option - can be changed on-the-fly\n-            settings.setValue(\"fUseNatpmp\", value.toBool());\n-            break;\n-        case MinimizeOnClose:\n-            fMinimizeOnClose = value.toBool();\n-            settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);\n-            break;\n-\n-        // default proxy\n-        case ProxyUse:\n-            if (settings.value(\"fUseProxy\") != value) {\n-                settings.setValue(\"fUseProxy\", value.toBool());\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case ProxyIP: {\n-            auto ip_port = GetProxySetting(settings, \"addrProxy\");\n-            if (!ip_port.is_set || ip_port.ip != value.toString()) {\n-                ip_port.ip = value.toString();\n-                SetProxySetting(settings, \"addrProxy\", ip_port);\n-                setRestartRequired(true);\n-            }\n-        }\n+    QSettings settings;\n+\n+    switch (option) {\n+    case StartAtStartup:\n+        successful = GUIUtil::SetStartOnSystemStartup(value.toBool());\n         break;\n-        case ProxyPort: {\n-            auto ip_port = GetProxySetting(settings, \"addrProxy\");\n-            if (!ip_port.is_set || ip_port.port != value.toString()) {\n-                ip_port.port = value.toString();\n-                SetProxySetting(settings, \"addrProxy\", ip_port);\n-                setRestartRequired(true);\n-            }\n-        }\n+    case ShowTrayIcon:\n+        m_show_tray_icon = value.toBool();\n+        settings.setValue(\"fHideTrayIcon\", !m_show_tray_icon);\n+        Q_EMIT showTrayIconChanged(m_show_tray_icon);\n+        break;\n+    case MinimizeToTray:\n+        fMinimizeToTray = value.toBool();\n+        settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n+        break;\n+    case MapPortUPnP: // core option - can be changed on-the-fly\n+        settings.setValue(\"fUseUPnP\", value.toBool());\n+        break;\n+    case MapPortNatpmp: // core option - can be changed on-the-fly\n+        settings.setValue(\"fUseNatpmp\", value.toBool());\n+        break;\n+    case MinimizeOnClose:\n+        fMinimizeOnClose = value.toBool();\n+        settings.setValue(\"fMinimizeOnClose\", fMinimizeOnClose);\n         break;\n \n-        // separate Tor proxy\n-        case ProxyUseTor:\n-            if (settings.value(\"fUseSeparateProxyTor\") != value) {\n-                settings.setValue(\"fUseSeparateProxyTor\", value.toBool());\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case ProxyIPTor: {\n-            auto ip_port = GetProxySetting(settings, \"addrSeparateProxyTor\");\n-            if (!ip_port.is_set || ip_port.ip != value.toString()) {\n-                ip_port.ip = value.toString();\n-                SetProxySetting(settings, \"addrSeparateProxyTor\", ip_port);\n-                setRestartRequired(true);\n-            }\n+    // default proxy\n+    case ProxyUse:\n+        if (settings.value(\"fUseProxy\") != value) {\n+            settings.setValue(\"fUseProxy\", value.toBool());\n+            setRestartRequired(true);\n         }\n         break;\n-        case ProxyPortTor: {\n-            auto ip_port = GetProxySetting(settings, \"addrSeparateProxyTor\");\n-            if (!ip_port.is_set || ip_port.port != value.toString()) {\n-                ip_port.port = value.toString();\n-                SetProxySetting(settings, \"addrSeparateProxyTor\", ip_port);\n-                setRestartRequired(true);\n-            }\n+    case ProxyIP: {\n+        auto ip_port = GetProxySetting(settings, \"addrProxy\");\n+        if (!ip_port.is_set || ip_port.ip != value.toString()) {\n+            ip_port.ip = value.toString();\n+            SetProxySetting(settings, \"addrProxy\", ip_port);\n+            setRestartRequired(true);\n+        }\n+    }\n+    break;\n+    case ProxyPort: {\n+        auto ip_port = GetProxySetting(settings, \"addrProxy\");\n+        if (!ip_port.is_set || ip_port.port != value.toString()) {\n+            ip_port.port = value.toString();\n+            SetProxySetting(settings, \"addrProxy\", ip_port);\n+            setRestartRequired(true);\n+        }\n+    }\n+    break;\n+\n+    // separate Tor proxy\n+    case ProxyUseTor:\n+        if (settings.value(\"fUseSeparateProxyTor\") != value) {\n+            settings.setValue(\"fUseSeparateProxyTor\", value.toBool());\n+            setRestartRequired(true);\n         }\n         break;\n+    case ProxyIPTor: {\n+        auto ip_port = GetProxySetting(settings, \"addrSeparateProxyTor\");\n+        if (!ip_port.is_set || ip_port.ip != value.toString()) {\n+            ip_port.ip = value.toString();\n+            SetProxySetting(settings, \"addrSeparateProxyTor\", ip_port);\n+            setRestartRequired(true);\n+        }\n+    }\n+    break;\n+    case ProxyPortTor: {\n+        auto ip_port = GetProxySetting(settings, \"addrSeparateProxyTor\");\n+        if (!ip_port.is_set || ip_port.port != value.toString()) {\n+            ip_port.port = value.toString();\n+            SetProxySetting(settings, \"addrSeparateProxyTor\", ip_port);\n+            setRestartRequired(true);\n+        }\n+    }\n+    break;\n \n #ifdef ENABLE_WALLET\n-        case SpendZeroConfChange:\n-            if (settings.value(\"bSpendZeroConfChange\") != value) {\n-                settings.setValue(\"bSpendZeroConfChange\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case ExternalSignerPath:\n-            if (settings.value(\"external_signer_path\") != value.toString()) {\n-                settings.setValue(\"external_signer_path\", value.toString());\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case SubFeeFromAmount:\n-            m_sub_fee_from_amount = value.toBool();\n-            settings.setValue(\"SubFeeFromAmount\", m_sub_fee_from_amount);\n-            break;\n+    case SpendZeroConfChange:\n+        if (settings.value(\"bSpendZeroConfChange\") != value) {\n+            settings.setValue(\"bSpendZeroConfChange\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case ExternalSignerPath:\n+        if (settings.value(\"external_signer_path\") != value.toString()) {\n+            settings.setValue(\"external_signer_path\", value.toString());\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case SubFeeFromAmount:\n+        m_sub_fee_from_amount = value.toBool();\n+        settings.setValue(\"SubFeeFromAmount\", m_sub_fee_from_amount);\n+        break;\n #endif\n-        case DisplayUnit:\n-            setDisplayUnit(value);\n-            break;\n-        case ThirdPartyTxUrls:\n-            if (strThirdPartyTxUrls != value.toString()) {\n-                strThirdPartyTxUrls = value.toString();\n-                settings.setValue(\"strThirdPartyTxUrls\", strThirdPartyTxUrls);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case Language:\n-            if (settings.value(\"language\") != value) {\n-                settings.setValue(\"language\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case UseEmbeddedMonospacedFont:\n-            m_use_embedded_monospaced_font = value.toBool();\n-            settings.setValue(\"UseEmbeddedMonospacedFont\", m_use_embedded_monospaced_font);\n-            Q_EMIT useEmbeddedMonospacedFontChanged(m_use_embedded_monospaced_font);\n-            break;\n-        case CoinControlFeatures:\n-            fCoinControlFeatures = value.toBool();\n-            settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n-            Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n-            break;\n-        case EnablePSBTControls:\n-            m_enable_psbt_controls = value.toBool();\n-            settings.setValue(\"enable_psbt_controls\", m_enable_psbt_controls);\n-            break;\n-        case Prune:\n-            if (settings.value(\"bPrune\") != value) {\n-                settings.setValue(\"bPrune\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case PruneSize:\n-            if (settings.value(\"nPruneSize\") != value) {\n-                settings.setValue(\"nPruneSize\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case DatabaseCache:\n-            if (settings.value(\"nDatabaseCache\") != value) {\n-                settings.setValue(\"nDatabaseCache\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case ThreadsScriptVerif:\n-            if (settings.value(\"nThreadsScriptVerif\") != value) {\n-                settings.setValue(\"nThreadsScriptVerif\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case Listen:\n-            if (settings.value(\"fListen\") != value) {\n-                settings.setValue(\"fListen\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        case Server:\n-            if (settings.value(\"server\") != value) {\n-                settings.setValue(\"server\", value);\n-                setRestartRequired(true);\n-            }\n-            break;\n-        default:\n-            break;\n+    case DisplayUnit:\n+        setDisplayUnit(value);\n+        break;\n+    case ThirdPartyTxUrls:\n+        if (strThirdPartyTxUrls != value.toString()) {\n+            strThirdPartyTxUrls = value.toString();\n+            settings.setValue(\"strThirdPartyTxUrls\", strThirdPartyTxUrls);\n+            setRestartRequired(true);\n         }\n+        break;\n+    case Language:\n+        if (settings.value(\"language\") != value) {\n+            settings.setValue(\"language\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case UseEmbeddedMonospacedFont:\n+        m_use_embedded_monospaced_font = value.toBool();\n+        settings.setValue(\"UseEmbeddedMonospacedFont\", m_use_embedded_monospaced_font);\n+        Q_EMIT useEmbeddedMonospacedFontChanged(m_use_embedded_monospaced_font);\n+        break;\n+    case CoinControlFeatures:\n+        fCoinControlFeatures = value.toBool();\n+        settings.setValue(\"fCoinControlFeatures\", fCoinControlFeatures);\n+        Q_EMIT coinControlFeaturesChanged(fCoinControlFeatures);\n+        break;\n+    case EnablePSBTControls:\n+        m_enable_psbt_controls = value.toBool();\n+        settings.setValue(\"enable_psbt_controls\", m_enable_psbt_controls);\n+        break;\n+    case Prune:\n+        if (settings.value(\"bPrune\") != value) {\n+            settings.setValue(\"bPrune\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case PruneSize:\n+        if (settings.value(\"nPruneSize\") != value) {\n+            settings.setValue(\"nPruneSize\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case DatabaseCache:\n+        if (settings.value(\"nDatabaseCache\") != value) {\n+            settings.setValue(\"nDatabaseCache\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case ThreadsScriptVerif:\n+        if (settings.value(\"nThreadsScriptVerif\") != value) {\n+            settings.setValue(\"nThreadsScriptVerif\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case Listen:\n+        if (settings.value(\"fListen\") != value) {\n+            settings.setValue(\"fListen\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    case Server:\n+        if (settings.value(\"server\") != value) {\n+            settings.setValue(\"server\", value);\n+            setRestartRequired(true);\n+        }\n+        break;\n+    default:\n+        break;",
      "path": "src/qt/optionsmodel.cpp",
      "position": 492,
      "original_position": 492,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "original_commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if it should set `successful = false`? Or maybe just drop the `default` cases and let the compiler complain about unhandled cases?",
      "created_at": "2022-05-21T10:58:12Z",
      "updated_at": "2022-05-21T10:58:31Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#discussion_r878682156",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878682156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 601,
      "original_line": 601,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878682160",
      "pull_request_review_id": 980817294,
      "id": 878682160,
      "node_id": "PRRC_kwDOEEET9c40X6Aw",
      "diff_hunk": "@@ -335,260 +335,272 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n {\n     if(role == Qt::EditRole)\n     {\n-        QSettings settings;\n-        switch(index.row())\n-        {\n-        case StartAtStartup:\n-            return GUIUtil::GetStartOnSystemStartup();\n-        case ShowTrayIcon:\n-            return m_show_tray_icon;\n-        case MinimizeToTray:\n-            return fMinimizeToTray;\n-        case MapPortUPnP:\n+        return getOption(OptionID(index.row()));\n+    }\n+    return QVariant();\n+}\n+\n+// write QSettings values\n+bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, int role)\n+{\n+    bool successful = true; /* set to false on parse error */\n+    if(role == Qt::EditRole)\n+    {\n+        successful = setOption(OptionID(index.row()), value);\n+    }\n+\n+    Q_EMIT dataChanged(index, index);",
      "path": "src/qt/optionsmodel.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "original_commit_id": "a63b60f02bf7987d0a430496abe524de94f3c8cb",
      "in_reply_to_id": 878181779,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's fine as is.",
      "created_at": "2022-05-21T10:58:17Z",
      "updated_at": "2022-05-21T10:58:31Z",
      "html_url": "https://github.com/bitcoin-core/gui/pull/600#discussion_r878682160",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/comments/878682160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin-core/gui/pulls/600"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 352,
      "original_line": 352,
      "side": "RIGHT"
    }
  ]
}